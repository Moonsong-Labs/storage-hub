{
	"name": "@storagehub/test",
	"version": "0.1.0",
	"description": "Test package for storagehub",
	"main": "index.js",
	"type": "module",
	"engines": {
		"node": "23.x.x"
	},
	"scripts": {
		"bundle-types": "cd ../types-bundle && pnpm i && pnpm build && pnpm fmt:fix && cd ../test",
		"typegen": "pnpm bundle-types && cd ../api-augment && pnpm scrape && pnpm generate:all && pnpm build && pnpm fmt:fix; cd ../test",
		"fmt": "biome format .",
		"fmt:fix": "biome format . --write",
		"lint": "biome lint .",
		"typecheck": "tsc --noEmit",
		"crossbuild:mac": "DOCKER_DEFAULT_PLATFORM=linux/amd64 pnpm tsx scripts/crossBuildMac.ts",
		"docker:build": "DOCKER_DEFAULT_PLATFORM=linux/amd64 pnpm tsx scripts/buildLocalDocker.ts",
		"docker:start": "docker compose -f ../docker/local-node-compose.yml  -p sh_dev_node up -d",
		"docker:start:latest": "docker compose -f ../docker/latest-node-compose.yml  -p sh_dev_node up -d",
		"docker:stop": "docker compose -f ../docker/local-node-compose.yml  -p sh_dev_node down",
		"docker:stop:all": "docker rm -vf $(docker ps -a --filter 'ancestor=storage-hub:local' -q) $(docker ps -a --filter 'name=sh-postgres' -q) $(docker ps -a --filter 'name=toxiproxy' -q)",
		"docker:stop:latest": "docker compose -f ../docker/latest-node-compose.yml  -p sh_dev_node down",
		"docker:start:bspnet": "pnpm tsx scripts/bspNetBootstrap.ts",
		"docker:start:fullnet": "INDEXER=1 pnpm tsx scripts/fullNetBootstrap.ts",
		"docker:start:fullnet:initialised": "INDEXER=1 pnpm tsx scripts/fullNetBootstrapInitialised.ts",
		"docker:start:generateProofsDealerBenchmarkProofs": "pnpm tsx scripts/generateProofsDealerBenchmarkProofs.ts",
		"docker:start:generateFileSystemBenchmarkProofs": "pnpm tsx scripts/generateFileSystemBenchmarkProofs.ts",
		"docker:stop:fullnet": "docker compose -f ../docker/fullnet-base-template.yml down --remove-orphans && docker volume prune -f",
		"docker:stop:bspnet": "docker compose -f ../docker/bspnet-base-template.yml down --remove-orphans && docker volume prune -f",
		"docker:stop:generateProofsDealerBenchmarkProofs": "docker compose -f ../docker/local-dev-bsp-compose.yml down --remove-orphans && docker volume prune -f",
		"docker:stop:generateFileSystemBenchmarkProofs": "docker compose -f ../docker/local-dev-bsp-compose.yml down --remove-orphans && docker volume prune -f",
		"zombie:run:latest": "SH_IMAGE=docker.io/moonsonglabs/storage-hub:latest pnpm zombienet spawn configs/simple.toml",
		"zombie:run:local": "DOCKER_BUILDKIT=0  SH_IMAGE=storage-hub:local pnpm zombienet spawn configs/simple.toml",
		"zombie:run:native": "pnpm  tsx scripts/downloadPolkadot.ts stable2412  && pnpm zombienet spawn configs/simpleNative.toml",
		"zombie:run:full": "SH_IMAGE=docker.io/moonsonglabs/storage-hub:latest pnpm zombienet spawn configs/fullNetwork.toml",
		"zombie:run:full:native": "pnpm  tsx scripts/downloadPolkadot.ts stable2412  && pnpm zombienet spawn configs/fullNetworkNative.toml",
		"zombie:setup:native": "pnpm  tsx scripts/fullNetworkSetup.ts",
		"zombie:test:native": "pnpm  tsx scripts/downloadPolkadot.ts stable2412  && pnpm zombienet test --provider native configs/simpleNative.zndsl",
		"zombie:test:local": "SH_IMAGE=storage-hub:local pnpm zombienet test configs/simple.zndsl",
		"zombie:test:latest": "SH_IMAGE=docker.io/moonsonglabs/storage-hub:latest pnpm zombienet test configs/simple.zndsl",
		"test:full": "node --no-deprecation --import tsx --test ./suites/zombie/**.spec.ts",
		"test:fullnet": "NODE_OPTIONS='--no-deprecation' pnpm tsx scripts/checkRunning.ts && node --no-deprecation --test-concurrency 1 --import tsx --test ./suites/integration/msp/**.test.ts",
		"test:fullnet:only": "NODE_OPTIONS='--no-deprecation' pnpm tsx scripts/checkRunning.ts && node --no-deprecation --test-concurrency 1 --import tsx --test --test-only ./suites/integration/msp/**.test.ts",
		"test:bspnet": "NODE_OPTIONS='--no-deprecation' pnpm tsx scripts/checkRunning.ts && node --no-deprecation --test-concurrency 1 --import tsx --test ./suites/integration/bsp/**.test.ts",
		"test:bspnet:only": "NODE_OPTIONS='--no-deprecation' pnpm tsx scripts/checkRunning.ts && node --no-deprecation --import tsx --test-concurrency 1 --test --test-only ./suites/integration/bsp/**.test.ts",
		"test:user": "NODE_OPTIONS='--no-deprecation' pnpm tsx scripts/checkRunning.ts && node --no-deprecation --test-concurrency 1 --import tsx --test ./suites/integration/user/**.test.ts",
		"test:user:only": "NODE_OPTIONS='--no-deprecation' pnpm tsx scripts/checkRunning.ts && node --no-deprecation --test-concurrency 1 --import tsx --test --test-only ./suites/integration/user/**.test.ts",
		"test:node": "node --no-deprecation --import tsx --test ./suites/solo-node/**/**.test.ts",
		"test:node:only": "node --no-deprecation --import tsx --test --test-only ./suites/solo-node/**/**.test.ts",
		"test:node:single": "node --no-deprecation --import tsx --test --test-name-pattern=$FILTER ./suites/solo-node/**/**.test.ts"
	},
	"keywords": [],
	"author": "",
	"license": "ISC",
	"dependencies": {
		"@polkadot/api": "^15.10.2",
		"@polkadot/keyring": "13.4.4",
		"@polkadot/types": "^15.10.2",
		"@polkadot/util": "13.4.4",
		"@polkadot/util-crypto": "13.4.4",
		"@polkadot/wasm-crypto": "7.4.1",
		"@reporters/github": "1.7.2",
		"@storagehub/api-augment": "workspace:*",
		"@storagehub/types-bundle": "workspace:*",
		"@types/tmp": "^0.2.6",
		"@zombienet/cli": "1.3.128",
		"@zombienet/utils": "0.0.28",
		"docker-compose": "1.1.0",
		"dockerode": "4.0.3",
		"dotenv": "16.4.7",
		"inquirer": "10.2.0",
		"json-bigint": "^1.0.0",
		"postgres": "^3.4.5",
		"strip-ansi": "^7.1.0",
		"testcontainers": "10.16.0",
		"tmp": "0.2.3",
		"tsx": "4.19.2",
		"yaml": "2.5.1"
	},
	"devDependencies": {
		"@biomejs/biome": "1.8.3",
		"@types/dockerode": "3.3.34",
		"@types/inquirer": "9.0.7",
		"@types/json-bigint": "1.0.4",
		"@types/node": "^22.10.7",
		"typescript": "*"
	}
}