{
  "name": "@storagehub/test",
  "version": "0.1.0",
  "description": "Test package for storagehub",
  "main": "index.js",
  "type": "module",
  "engines": {
    "node": "22.x.x"
  },
  "scripts": {
    "bundle-types": "cd ../types-bundle && pnpm i && pnpm build && pnpm fmt:fix && cd ../test",
    "typegen": "pnpm bundle-types && cd ../api-augment && pnpm scrape && pnpm generate:all && pnpm build && pnpm fmt:fix; cd ../test",
    "fmt": "biome format .",
    "fmt:fix": "biome format . --write",
    "lint": "biome lint .",
    "typecheck": "pnpm tsc --version && pnpm tsc --noEmit",
    "crossbuild:mac": "pnpm tsx scripts/crossBuildMac.ts",
    "docker:build": "DOCKER_DEFAULT_PLATFORM=linux/amd64 pnpm tsx scripts/buildLocalDocker.ts",
    "docker:start": "docker compose -f ../docker/local-node-compose.yml  -p sh_dev_node up -d",
    "docker:start:latest": "docker compose -f ../docker/latest-node-compose.yml  -p sh_dev_node up -d",
    "docker:stop": "docker compose -f ../docker/local-node-compose.yml  -p sh_dev_node down",
    "docker:stop:latest": "docker compose -f ../docker/latest-node-compose.yml  -p sh_dev_node down",
    "docker:start:bspnet": "NOISY=0 ROCKSDB=0 pnpm tsx scripts/bspNetBootstrap.ts",
    "docker:stop:bspnet": "docker compose -f ../docker/local-dev-bsp-compose.yml down --remove-orphans && docker volume prune -f",
    "docker:start:bspnet:rocksdb": "NOISY=0 ROCKSDB=1 pnpm tsx scripts/bspNetBootstrap.ts",
    "docker:stop:bspnet:rocksdb": "docker compose -f ../docker/local-dev-bsp-rocksdb-compose.yml down --remove-orphans && docker volume prune -f",
    "docker:start:noisynet": "NOISY=1 ROCKSDB=0 pnpm tsx scripts/bspNetBootstrap.ts",
    "docker:stop:noisynet": "docker compose -f ../docker/noisy-bsp-compose.yml down --remove-orphans && docker volume prune -f",
    "zombie:run:latest": "SH_IMAGE=docker.io/moonsonglabs/storage-hub:latest pnpm zombienet spawn configs/simple.toml",
    "zombie:run:local": "DOCKER_BUILDKIT=0  SH_IMAGE=storage-hub:local pnpm zombienet spawn configs/simple.toml",
    "zombie:run:native": "pnpm  tsx scripts/downloadPolkadot.ts 1.9.0  && pnpm zombienet spawn configs/simpleNative.toml",
    "zombie:run:full": "SH_IMAGE=docker.io/moonsonglabs/storage-hub:latest pnpm zombienet spawn configs/fullNetwork.toml",
    "zombie:run:full:native": "pnpm  tsx scripts/downloadPolkadot.ts 1.9.0  && pnpm zombienet spawn configs/fullNetworkNative.toml",
    "zombie:setup:native": "pnpm  tsx scripts/fullNetworkSetup.ts",
    "zombie:test:native": "pnpm  tsx scripts/downloadPolkadot.ts 1.9.0  && pnpm zombienet test --provider native configs/simpleNative.zndsl",
    "zombie:test:local": "SH_IMAGE=storage-hub:local pnpm zombienet test configs/simple.zndsl",
    "zombie:test:latest": "SH_IMAGE=docker.io/moonsonglabs/storage-hub:latest pnpm zombienet test configs/simple.zndsl",
    "test:full": "node --no-deprecation --import tsx --test ./suites/zombie/**.spec.ts",
    "test:bspnet": "NODE_OPTIONS='--no-deprecation' pnpm tsx scripts/checkRunning.ts && node --no-deprecation --test-concurrency 1 --import tsx --test ./suites/integration/bsp/**.test.ts",
    "test:bspnet:only": "NODE_OPTIONS='--no-deprecation' pnpm tsx scripts/checkRunning.ts && node --no-deprecation --import tsx --test-concurrency 1 --test --test-only ./suites/integration/bsp/**.test.ts",
    "test:user": "NODE_OPTIONS='--no-deprecation' pnpm tsx scripts/checkRunning.ts && node --no-deprecation --test-concurrency 1 --import tsx --test ./suites/integration/user/**.test.ts",
    "test:user:only": "NODE_OPTIONS='--no-deprecation' pnpm tsx scripts/checkRunning.ts && node --no-deprecation --test-concurrency 1 --import tsx --test --test-only ./suites/integration/user/**.test.ts",
    "test:node": "node --no-deprecation --import tsx --test ./suites/solo-node/**/**.test.ts",
    "test:node:only": "node --no-deprecation --import tsx --test --test-only ./suites/solo-node/**/**.test.ts",
    "test:node:single": "node --no-deprecation --import tsx --test --test-name-pattern=$FILTER ./suites/solo-node/**/**.test.ts"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@polkadot/api": "12.4.2",
    "@polkadot/api-augment": "12.4.2",
    "@polkadot/keyring": "13.0.2",
    "@polkadot/types": "12.4.2",
    "@polkadot/util": "13.0.2",
    "@polkadot/util-crypto": "13.0.2",
    "@polkadot/wasm-crypto": "7.3.2",
    "@reporters/github": "1.7.0",
    "@storagehub/api-augment": "workspace:*",
    "@storagehub/types-bundle": "workspace:*",
    "@zombienet/cli": "1.3.109",
    "@zombienet/utils": "0.0.25",
    "docker-compose": "0.24.8",
    "dockerode": "4.0.2",
    "dotenv": "16.4.5",
    "inquirer": "10.2.0",
    "json-bigint": "^1.0.0",
    "testcontainers": "10.13.0",
    "tiny-invariant": "^1.3.3",
    "tsx": "4.19.0"
  },
  "devDependencies": {
    "@biomejs/biome": "1.8.3",
    "@types/dockerode": "3.3.31",
    "@types/inquirer": "9.0.7",
    "@types/json-bigint": "1.0.4",
    "@types/node": "22.5.2",
    "typescript": "5.5.4"
  }
}