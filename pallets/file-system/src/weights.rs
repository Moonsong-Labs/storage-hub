
//! Autogenerated weights for `pallet_file_system`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 43.0.0
//! DATE: 2025-01-06, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Tobiass-MacBook-Pro.local`, CPU: `<UNKNOWN>`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: `1024`

// Executed Command:
// frame-omni-bencher
// v1
// benchmark
// pallet
// --runtime
// target/production/wbuild/storage-hub-runtime/storage_hub_runtime.wasm
// --pallet
// pallet-file-system
// --extrinsic
// 
// --output
// pallets/file-system/src/weights.rs
// --template
// ../../polkadot-sdk/substrate/.maintain/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_file_system`.
pub trait WeightInfo {
	fn create_bucket() -> Weight;
	fn request_move_bucket() -> Weight;
	fn msp_respond_move_bucket_request() -> Weight;
	fn update_bucket_privacy() -> Weight;
	fn create_and_associate_collection_with_bucket() -> Weight;
	fn delete_bucket() -> Weight;
	fn issue_storage_request() -> Weight;
	fn msp_respond_storage_requests_multiple_buckets(n: u32, m: u32, l: u32, ) -> Weight;
	fn bsp_volunteer() -> Weight;
	fn bsp_confirm_storing(n: u32, ) -> Weight;
	fn bsp_request_stop_storing() -> Weight;
	fn bsp_confirm_stop_storing() -> Weight;
	fn stop_storing_for_insolvent_user_bsp() -> Weight;
	fn stop_storing_for_insolvent_user_msp() -> Weight;
	fn delete_file_without_inclusion_proof() -> Weight;
	fn delete_file_with_inclusion_proof() -> Weight;
	fn pending_file_deletion_request_submit_proof() -> Weight;
	fn set_global_parameters() -> Weight;
}

/// Weights for `pallet_file_system` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `Providers::MainStorageProviders` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `Providers::InsolventProviders` (r:2 w:0)
	/// Proof: `Providers::InsolventProviders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AwaitingTopUpFromProviders` (r:2 w:0)
	/// Proof: `Providers::AwaitingTopUpFromProviders` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::NextCollectionId` (r:1 w:1)
	/// Proof: `Nfts::NextCollectionId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:1 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Providers::Buckets` (r:1 w:1)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToValuePropositions` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviderIdsToValuePropositions` (`max_values`: None, `max_size`: Some(1123), added: 3598, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:1 w:1)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:1 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::RegisteredUsers` (r:1 w:1)
	/// Proof: `PaymentStreams::RegisteredUsers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::OnPollTicker` (r:1 w:0)
	/// Proof: `PaymentStreams::OnPollTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToBuckets` (r:0 w:1)
	/// Proof: `Providers::MainStorageProviderIdsToBuckets` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionRoleOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionAccount` (r:0 w:1)
	/// Proof: `Nfts::CollectionAccount` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	fn create_bucket() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1568`
		//  Estimated: `6054`
		// Minimum execution time: 148_000_000 picoseconds.
		Weight::from_parts(149_000_000, 6054)
			.saturating_add(T::DbWeight::get().reads(17_u64))
			.saturating_add(T::DbWeight::get().writes(11_u64))
	}
	/// Storage: `Providers::Buckets` (r:1 w:0)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `Providers::InsolventProviders` (r:2 w:0)
	/// Proof: `Providers::InsolventProviders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AwaitingTopUpFromProviders` (r:2 w:0)
	/// Proof: `Providers::AwaitingTopUpFromProviders` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingBucketsToMove` (r:1 w:1)
	/// Proof: `FileSystem::PendingBucketsToMove` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::BucketsWithStorageRequests` (r:1 w:0)
	/// Proof: `FileSystem::BucketsWithStorageRequests` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::NextAvailableMoveBucketRequestExpirationBlock` (r:1 w:1)
	/// Proof: `FileSystem::NextAvailableMoveBucketRequestExpirationBlock` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::MoveBucketRequestExpirations` (r:1 w:1)
	/// Proof: `FileSystem::MoveBucketRequestExpirations` (`max_values`: None, `max_size`: Some(6422), added: 8897, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingMoveBucketRequests` (r:0 w:1)
	/// Proof: `FileSystem::PendingMoveBucketRequests` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn request_move_bucket() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `665`
		//  Estimated: `9887`
		// Minimum execution time: 38_000_000 picoseconds.
		Weight::from_parts(39_000_000, 9887)
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AccountIdToMainStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToMainStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::InsolventProviders` (r:4 w:0)
	/// Proof: `Providers::InsolventProviders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AwaitingTopUpFromProviders` (r:4 w:0)
	/// Proof: `Providers::AwaitingTopUpFromProviders` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:2 w:2)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingMoveBucketRequests` (r:1 w:1)
	/// Proof: `FileSystem::PendingMoveBucketRequests` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Providers::Buckets` (r:1 w:1)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:2 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:2 w:2)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToValuePropositions` (r:2 w:0)
	/// Proof: `Providers::MainStorageProviderIdsToValuePropositions` (`max_values`: None, `max_size`: Some(1123), added: 3598, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:5 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::DynamicRatePaymentStreams` (r:1 w:0)
	/// Proof: `PaymentStreams::DynamicRatePaymentStreams` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::PrivilegedProviders` (r:1 w:0)
	/// Proof: `PaymentStreams::PrivilegedProviders` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::LastChargeableInfo` (r:1 w:0)
	/// Proof: `PaymentStreams::LastChargeableInfo` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Providers::TotalBspsCapacity` (r:1 w:0)
	/// Proof: `Providers::TotalBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Providers::UsedBspsCapacity` (r:1 w:0)
	/// Proof: `Providers::UsedBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::RegisteredUsers` (r:1 w:1)
	/// Proof: `PaymentStreams::RegisteredUsers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::OnPollTicker` (r:1 w:0)
	/// Proof: `PaymentStreams::OnPollTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToBuckets` (r:0 w:2)
	/// Proof: `Providers::MainStorageProviderIdsToBuckets` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingBucketsToMove` (r:0 w:1)
	/// Proof: `FileSystem::PendingBucketsToMove` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	fn msp_respond_move_bucket_request() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4223`
		//  Estimated: `13545`
		// Minimum execution time: 256_000_000 picoseconds.
		Weight::from_parts(259_000_000, 13545)
			.saturating_add(T::DbWeight::get().reads(37_u64))
			.saturating_add(T::DbWeight::get().writes(12_u64))
	}
	/// Storage: `Providers::Buckets` (r:1 w:1)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:2 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::NextCollectionId` (r:1 w:1)
	/// Proof: `Nfts::NextCollectionId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionRoleOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionAccount` (r:0 w:1)
	/// Proof: `Nfts::CollectionAccount` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	fn update_bucket_privacy() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `680`
		//  Estimated: `6108`
		// Minimum execution time: 45_000_000 picoseconds.
		Weight::from_parts(46_000_000, 6108)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
	}
	/// Storage: `Providers::Buckets` (r:1 w:1)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::NextCollectionId` (r:1 w:1)
	/// Proof: `Nfts::NextCollectionId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:1 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionRoleOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionAccount` (r:0 w:1)
	/// Proof: `Nfts::CollectionAccount` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	fn create_and_associate_collection_with_bucket() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `680`
		//  Estimated: `3657`
		// Minimum execution time: 39_000_000 picoseconds.
		Weight::from_parts(40_000_000, 3657)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
	}
	/// Storage: `Providers::Buckets` (r:1 w:1)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:1 w:1)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToValuePropositions` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviderIdsToValuePropositions` (`max_values`: None, `max_size`: Some(1123), added: 3598, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:5 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `Providers::InsolventProviders` (r:2 w:0)
	/// Proof: `Providers::InsolventProviders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AwaitingTopUpFromProviders` (r:2 w:0)
	/// Proof: `Providers::AwaitingTopUpFromProviders` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::DynamicRatePaymentStreams` (r:1 w:0)
	/// Proof: `PaymentStreams::DynamicRatePaymentStreams` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::PrivilegedProviders` (r:1 w:0)
	/// Proof: `PaymentStreams::PrivilegedProviders` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::LastChargeableInfo` (r:1 w:0)
	/// Proof: `PaymentStreams::LastChargeableInfo` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Providers::TotalBspsCapacity` (r:1 w:0)
	/// Proof: `Providers::TotalBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Providers::UsedBspsCapacity` (r:1 w:0)
	/// Proof: `Providers::UsedBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::RegisteredUsers` (r:1 w:1)
	/// Proof: `PaymentStreams::RegisteredUsers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:1 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemMetadataOf` (r:1 w:0)
	/// Proof: `Nfts::ItemMetadataOf` (`max_values`: None, `max_size`: Some(347), added: 2822, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionRoleOf` (r:1 w:1)
	/// Proof: `Nfts::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Attribute` (r:1 w:0)
	/// Proof: `Nfts::Attribute` (`max_values`: None, `max_size`: Some(479), added: 2954, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToBuckets` (r:0 w:1)
	/// Proof: `Providers::MainStorageProviderIdsToBuckets` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionMetadataOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionMetadataOf` (`max_values`: None, `max_size`: Some(294), added: 2769, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionAccount` (r:0 w:1)
	/// Proof: `Nfts::CollectionAccount` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	fn delete_bucket() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2863`
		//  Estimated: `13545`
		// Minimum execution time: 219_000_000 picoseconds.
		Weight::from_parts(226_000_000, 13545)
			.saturating_add(T::DbWeight::get().reads(29_u64))
			.saturating_add(T::DbWeight::get().writes(11_u64))
	}
	/// Storage: `Providers::Buckets` (r:1 w:0)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingBucketsToMove` (r:1 w:0)
	/// Proof: `FileSystem::PendingBucketsToMove` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `Providers::InsolventProviders` (r:2 w:0)
	/// Proof: `Providers::InsolventProviders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AwaitingTopUpFromProviders` (r:2 w:0)
	/// Proof: `Providers::AwaitingTopUpFromProviders` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:1 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::MaxReplicationTarget` (r:1 w:0)
	/// Proof: `FileSystem::MaxReplicationTarget` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ChallengesTicker` (r:1 w:0)
	/// Proof: `ProofsDealer::ChallengesTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequests` (r:1 w:1)
	/// Proof: `FileSystem::StorageRequests` (`max_values`: None, `max_size`: Some(1227), added: 3702, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::NextAvailableStorageRequestExpirationBlock` (r:1 w:1)
	/// Proof: `FileSystem::NextAvailableStorageRequestExpirationBlock` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequestExpirations` (r:1 w:1)
	/// Proof: `FileSystem::StorageRequestExpirations` (`max_values`: None, `max_size`: Some(3222), added: 5697, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::BucketsWithStorageRequests` (r:0 w:1)
	/// Proof: `FileSystem::BucketsWithStorageRequests` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	fn issue_storage_request() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `953`
		//  Estimated: `6687`
		// Minimum execution time: 84_000_000 picoseconds.
		Weight::from_parts(85_000_000, 6687)
			.saturating_add(T::DbWeight::get().reads(15_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AccountIdToMainStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToMainStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:1)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `Providers::Buckets` (r:10 w:10)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `Providers::InsolventProviders` (r:2 w:0)
	/// Proof: `Providers::InsolventProviders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AwaitingTopUpFromProviders` (r:2 w:0)
	/// Proof: `Providers::AwaitingTopUpFromProviders` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequests` (r:200 w:200)
	/// Proof: `FileSystem::StorageRequests` (`max_values`: None, `max_size`: Some(1227), added: 3702, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:1 w:0)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToValuePropositions` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviderIdsToValuePropositions` (`max_values`: None, `max_size`: Some(1123), added: 3598, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:1 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequestBsps` (r:200 w:0)
	/// Proof: `FileSystem::StorageRequestBsps` (`max_values`: None, `max_size`: Some(97), added: 2572, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::PriorityChallengesQueue` (r:1 w:1)
	/// Proof: `ProofsDealer::PriorityChallengesQueue` (`max_values`: Some(1), `max_size`: Some(3302), added: 3797, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::BucketsWithStorageRequests` (r:0 w:200)
	/// Proof: `FileSystem::BucketsWithStorageRequests` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 10]`.
	/// The range of component `m` is `[1, 10]`.
	/// The range of component `l` is `[1, 10]`.
	fn msp_respond_storage_requests_multiple_buckets(n: u32, m: u32, l: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + l * (7257 ±0) + m * (2238 ±0) + n * (9713 ±0)`
		//  Estimated: `75030 + l * (4827 ±390) + m * (4827 ±390) + n * (41847 ±390)`
		// Minimum execution time: 1_540_000_000 picoseconds.
		Weight::from_parts(1_552_000_000, 75030)
			// Standard Error: 11_496_157
			.saturating_add(Weight::from_parts(878_421_053, 0).saturating_mul(n.into()))
			// Standard Error: 11_496_157
			.saturating_add(Weight::from_parts(523_966_175, 0).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(56_u64))
			.saturating_add(T::DbWeight::get().reads((24_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().reads((3_u64).saturating_mul(m.into())))
			.saturating_add(T::DbWeight::get().reads((3_u64).saturating_mul(l.into())))
			.saturating_add(T::DbWeight::get().writes(45_u64))
			.saturating_add(T::DbWeight::get().writes((24_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(m.into())))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(l.into())))
			.saturating_add(Weight::from_parts(0, 4827).saturating_mul(l.into()))
			.saturating_add(Weight::from_parts(0, 4827).saturating_mul(m.into()))
			.saturating_add(Weight::from_parts(0, 41847).saturating_mul(n.into()))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::InsolventProviders` (r:2 w:0)
	/// Proof: `Providers::InsolventProviders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AwaitingTopUpFromProviders` (r:2 w:0)
	/// Proof: `Providers::AwaitingTopUpFromProviders` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequests` (r:1 w:1)
	/// Proof: `FileSystem::StorageRequests` (`max_values`: None, `max_size`: Some(1227), added: 3702, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequestBsps` (r:1 w:1)
	/// Proof: `FileSystem::StorageRequestBsps` (`max_values`: None, `max_size`: Some(97), added: 2572, mode: `MaxEncodedLen`)
	/// Storage: `Providers::GlobalBspsReputationWeight` (r:1 w:0)
	/// Proof: `Providers::GlobalBspsReputationWeight` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::MaxReplicationTarget` (r:1 w:0)
	/// Proof: `FileSystem::MaxReplicationTarget` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::TickRangeToMaximumThreshold` (r:1 w:0)
	/// Proof: `FileSystem::TickRangeToMaximumThreshold` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ChallengesTicker` (r:1 w:0)
	/// Proof: `ProofsDealer::ChallengesTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn bsp_volunteer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2195`
		//  Estimated: `6054`
		// Minimum execution time: 56_000_000 picoseconds.
		Weight::from_parts(61_000_000, 6054)
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::InsolventProviders` (r:2 w:0)
	/// Proof: `Providers::InsolventProviders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AwaitingTopUpFromProviders` (r:2 w:0)
	/// Proof: `Providers::AwaitingTopUpFromProviders` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:1)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequests` (r:10 w:10)
	/// Proof: `FileSystem::StorageRequests` (`max_values`: None, `max_size`: Some(1227), added: 3702, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequestBsps` (r:20 w:10)
	/// Proof: `FileSystem::StorageRequestBsps` (`max_values`: None, `max_size`: Some(97), added: 2572, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `Providers::UsedBspsCapacity` (r:1 w:1)
	/// Proof: `Providers::UsedBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::DynamicRatePaymentStreams` (r:1 w:1)
	/// Proof: `PaymentStreams::DynamicRatePaymentStreams` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:1 w:0)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::PrivilegedProviders` (r:1 w:0)
	/// Proof: `PaymentStreams::PrivilegedProviders` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::LastChargeableInfo` (r:1 w:0)
	/// Proof: `PaymentStreams::LastChargeableInfo` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Providers::TotalBspsCapacity` (r:1 w:0)
	/// Proof: `Providers::TotalBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:4 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::CurrentPricePerGigaUnitPerTick` (r:1 w:0)
	/// Proof: `PaymentStreams::CurrentPricePerGigaUnitPerTick` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `Providers::Buckets` (r:1 w:0)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::BucketsWithStorageRequests` (r:0 w:10)
	/// Proof: `FileSystem::BucketsWithStorageRequests` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 10]`.
	fn bsp_confirm_storing(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1912 + n * (327 ±0)`
		//  Estimated: `11034 + n * (5144 ±0)`
		// Minimum execution time: 293_000_000 picoseconds.
		Weight::from_parts(81_364_605, 11034)
			// Standard Error: 429_629
			.saturating_add(Weight::from_parts(230_445_297, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(24_u64))
			.saturating_add(T::DbWeight::get().reads((3_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(5_u64))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 5144).saturating_mul(n.into()))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:3 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:3)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingStopStoringRequests` (r:1 w:1)
	/// Proof: `FileSystem::PendingStopStoringRequests` (`max_values`: None, `max_size`: Some(140), added: 2615, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequests` (r:1 w:1)
	/// Proof: `FileSystem::StorageRequests` (`max_values`: None, `max_size`: Some(1227), added: 3702, mode: `MaxEncodedLen`)
	/// Storage: `Providers::Buckets` (r:1 w:0)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingBucketsToMove` (r:1 w:0)
	/// Proof: `FileSystem::PendingBucketsToMove` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::MaxReplicationTarget` (r:1 w:0)
	/// Proof: `FileSystem::MaxReplicationTarget` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ChallengesTicker` (r:1 w:0)
	/// Proof: `ProofsDealer::ChallengesTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::NextAvailableStorageRequestExpirationBlock` (r:1 w:1)
	/// Proof: `FileSystem::NextAvailableStorageRequestExpirationBlock` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequestExpirations` (r:1 w:1)
	/// Proof: `FileSystem::StorageRequestExpirations` (`max_values`: None, `max_size`: Some(3222), added: 5697, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::BucketsWithStorageRequests` (r:0 w:1)
	/// Proof: `FileSystem::BucketsWithStorageRequests` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequestBsps` (r:0 w:1)
	/// Proof: `FileSystem::StorageRequestBsps` (`max_values`: None, `max_size`: Some(97), added: 2572, mode: `MaxEncodedLen`)
	fn bsp_request_stop_storing() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1369`
		//  Estimated: `8799`
		// Minimum execution time: 145_000_000 picoseconds.
		Weight::from_parts(147_000_000, 8799)
			.saturating_add(T::DbWeight::get().reads(17_u64))
			.saturating_add(T::DbWeight::get().writes(10_u64))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:1)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingStopStoringRequests` (r:1 w:1)
	/// Proof: `FileSystem::PendingStopStoringRequests` (`max_values`: None, `max_size`: Some(140), added: 2615, mode: `MaxEncodedLen`)
	/// Storage: `Providers::Buckets` (r:1 w:0)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `Providers::UsedBspsCapacity` (r:1 w:1)
	/// Proof: `Providers::UsedBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::DynamicRatePaymentStreams` (r:1 w:1)
	/// Proof: `PaymentStreams::DynamicRatePaymentStreams` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	/// Storage: `Providers::InsolventProviders` (r:2 w:0)
	/// Proof: `Providers::InsolventProviders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AwaitingTopUpFromProviders` (r:2 w:0)
	/// Proof: `Providers::AwaitingTopUpFromProviders` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:1 w:0)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::PrivilegedProviders` (r:1 w:0)
	/// Proof: `PaymentStreams::PrivilegedProviders` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::LastChargeableInfo` (r:1 w:0)
	/// Proof: `PaymentStreams::LastChargeableInfo` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Providers::TotalBspsCapacity` (r:1 w:0)
	/// Proof: `Providers::TotalBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:4 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::RegisteredUsers` (r:1 w:1)
	/// Proof: `PaymentStreams::RegisteredUsers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	fn bsp_confirm_stop_storing() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2203`
		//  Estimated: `11034`
		// Minimum execution time: 212_000_000 picoseconds.
		Weight::from_parts(214_000_000, 11034)
			.saturating_add(T::DbWeight::get().reads(25_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:1)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `Providers::Buckets` (r:1 w:0)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::DynamicRatePaymentStreams` (r:1 w:1)
	/// Proof: `PaymentStreams::DynamicRatePaymentStreams` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	/// Storage: `Providers::InsolventProviders` (r:2 w:0)
	/// Proof: `Providers::InsolventProviders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AwaitingTopUpFromProviders` (r:2 w:0)
	/// Proof: `Providers::AwaitingTopUpFromProviders` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:1 w:0)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::PrivilegedProviders` (r:1 w:0)
	/// Proof: `PaymentStreams::PrivilegedProviders` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::LastChargeableInfo` (r:1 w:0)
	/// Proof: `PaymentStreams::LastChargeableInfo` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `Providers::TotalBspsCapacity` (r:1 w:0)
	/// Proof: `Providers::TotalBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Providers::UsedBspsCapacity` (r:1 w:1)
	/// Proof: `Providers::UsedBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:4 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::RegisteredUsers` (r:1 w:1)
	/// Proof: `PaymentStreams::RegisteredUsers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	fn stop_storing_for_insolvent_user_bsp() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1918`
		//  Estimated: `11034`
		// Minimum execution time: 216_000_000 picoseconds.
		Weight::from_parts(235_000_000, 11034)
			.saturating_add(T::DbWeight::get().reads(24_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AccountIdToMainStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToMainStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `Providers::Buckets` (r:1 w:1)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:1 w:1)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:1)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `Providers::InsolventProviders` (r:2 w:0)
	/// Proof: `Providers::InsolventProviders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AwaitingTopUpFromProviders` (r:2 w:0)
	/// Proof: `Providers::AwaitingTopUpFromProviders` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::DynamicRatePaymentStreams` (r:1 w:0)
	/// Proof: `PaymentStreams::DynamicRatePaymentStreams` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::PrivilegedProviders` (r:1 w:0)
	/// Proof: `PaymentStreams::PrivilegedProviders` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::LastChargeableInfo` (r:1 w:0)
	/// Proof: `PaymentStreams::LastChargeableInfo` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `Providers::TotalBspsCapacity` (r:1 w:0)
	/// Proof: `Providers::TotalBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Providers::UsedBspsCapacity` (r:1 w:0)
	/// Proof: `Providers::UsedBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:4 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::RegisteredUsers` (r:1 w:1)
	/// Proof: `PaymentStreams::RegisteredUsers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	fn stop_storing_for_insolvent_user_msp() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1523`
		//  Estimated: `11034`
		// Minimum execution time: 214_000_000 picoseconds.
		Weight::from_parts(218_000_000, 11034)
			.saturating_add(T::DbWeight::get().reads(25_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: `Providers::Buckets` (r:1 w:0)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingFileDeletionRequests` (r:1 w:1)
	/// Proof: `FileSystem::PendingFileDeletionRequests` (`max_values`: None, `max_size`: Some(1089), added: 3564, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::NextAvailableFileDeletionRequestExpirationBlock` (r:1 w:1)
	/// Proof: `FileSystem::NextAvailableFileDeletionRequestExpirationBlock` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::FileDeletionRequestExpirations` (r:1 w:1)
	/// Proof: `FileSystem::FileDeletionRequestExpirations` (`max_values`: None, `max_size`: Some(10422), added: 12897, mode: `MaxEncodedLen`)
	fn delete_file_without_inclusion_proof() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1474`
		//  Estimated: `13887`
		// Minimum execution time: 27_000_000 picoseconds.
		Weight::from_parts(28_000_000, 13887)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `Providers::Buckets` (r:1 w:1)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:1 w:0)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToValuePropositions` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviderIdsToValuePropositions` (`max_values`: None, `max_size`: Some(1123), added: 3598, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:1 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:1)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::PriorityChallengesQueue` (r:1 w:1)
	/// Proof: `ProofsDealer::PriorityChallengesQueue` (`max_values`: Some(1), `max_size`: Some(3302), added: 3797, mode: `MaxEncodedLen`)
	fn delete_file_with_inclusion_proof() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1968`
		//  Estimated: `4787`
		// Minimum execution time: 96_000_000 picoseconds.
		Weight::from_parts(97_000_000, 4787)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AccountIdToMainStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToMainStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:1)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `Providers::Buckets` (r:1 w:1)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingFileDeletionRequests` (r:1 w:1)
	/// Proof: `FileSystem::PendingFileDeletionRequests` (`max_values`: None, `max_size`: Some(1089), added: 3564, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:1 w:0)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToValuePropositions` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviderIdsToValuePropositions` (`max_values`: None, `max_size`: Some(1123), added: 3598, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:1 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::PriorityChallengesQueue` (r:1 w:1)
	/// Proof: `ProofsDealer::PriorityChallengesQueue` (`max_values`: Some(1), `max_size`: Some(3302), added: 3797, mode: `MaxEncodedLen`)
	fn pending_file_deletion_request_submit_proof() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3264`
		//  Estimated: `4787`
		// Minimum execution time: 111_000_000 picoseconds.
		Weight::from_parts(112_000_000, 4787)
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `Parameters::Parameters` (r:1 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::TickRangeToMaximumThreshold` (r:0 w:1)
	/// Proof: `FileSystem::TickRangeToMaximumThreshold` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::MaxReplicationTarget` (r:0 w:1)
	/// Proof: `FileSystem::MaxReplicationTarget` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn set_global_parameters() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3`
		//  Estimated: `3501`
		// Minimum execution time: 4_000_000 picoseconds.
		Weight::from_parts(5_000_000, 3501)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `Providers::MainStorageProviders` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `Providers::InsolventProviders` (r:2 w:0)
	/// Proof: `Providers::InsolventProviders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AwaitingTopUpFromProviders` (r:2 w:0)
	/// Proof: `Providers::AwaitingTopUpFromProviders` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::NextCollectionId` (r:1 w:1)
	/// Proof: `Nfts::NextCollectionId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:1 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Providers::Buckets` (r:1 w:1)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToValuePropositions` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviderIdsToValuePropositions` (`max_values`: None, `max_size`: Some(1123), added: 3598, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:1 w:1)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:1 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::RegisteredUsers` (r:1 w:1)
	/// Proof: `PaymentStreams::RegisteredUsers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::OnPollTicker` (r:1 w:0)
	/// Proof: `PaymentStreams::OnPollTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToBuckets` (r:0 w:1)
	/// Proof: `Providers::MainStorageProviderIdsToBuckets` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionRoleOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionAccount` (r:0 w:1)
	/// Proof: `Nfts::CollectionAccount` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	fn create_bucket() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1568`
		//  Estimated: `6054`
		// Minimum execution time: 148_000_000 picoseconds.
		Weight::from_parts(149_000_000, 6054)
			.saturating_add(RocksDbWeight::get().reads(17_u64))
			.saturating_add(RocksDbWeight::get().writes(11_u64))
	}
	/// Storage: `Providers::Buckets` (r:1 w:0)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `Providers::InsolventProviders` (r:2 w:0)
	/// Proof: `Providers::InsolventProviders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AwaitingTopUpFromProviders` (r:2 w:0)
	/// Proof: `Providers::AwaitingTopUpFromProviders` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingBucketsToMove` (r:1 w:1)
	/// Proof: `FileSystem::PendingBucketsToMove` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::BucketsWithStorageRequests` (r:1 w:0)
	/// Proof: `FileSystem::BucketsWithStorageRequests` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::NextAvailableMoveBucketRequestExpirationBlock` (r:1 w:1)
	/// Proof: `FileSystem::NextAvailableMoveBucketRequestExpirationBlock` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::MoveBucketRequestExpirations` (r:1 w:1)
	/// Proof: `FileSystem::MoveBucketRequestExpirations` (`max_values`: None, `max_size`: Some(6422), added: 8897, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingMoveBucketRequests` (r:0 w:1)
	/// Proof: `FileSystem::PendingMoveBucketRequests` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn request_move_bucket() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `665`
		//  Estimated: `9887`
		// Minimum execution time: 38_000_000 picoseconds.
		Weight::from_parts(39_000_000, 9887)
			.saturating_add(RocksDbWeight::get().reads(10_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AccountIdToMainStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToMainStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::InsolventProviders` (r:4 w:0)
	/// Proof: `Providers::InsolventProviders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AwaitingTopUpFromProviders` (r:4 w:0)
	/// Proof: `Providers::AwaitingTopUpFromProviders` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:2 w:2)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingMoveBucketRequests` (r:1 w:1)
	/// Proof: `FileSystem::PendingMoveBucketRequests` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Providers::Buckets` (r:1 w:1)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:2 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:2 w:2)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToValuePropositions` (r:2 w:0)
	/// Proof: `Providers::MainStorageProviderIdsToValuePropositions` (`max_values`: None, `max_size`: Some(1123), added: 3598, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:5 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::DynamicRatePaymentStreams` (r:1 w:0)
	/// Proof: `PaymentStreams::DynamicRatePaymentStreams` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::PrivilegedProviders` (r:1 w:0)
	/// Proof: `PaymentStreams::PrivilegedProviders` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::LastChargeableInfo` (r:1 w:0)
	/// Proof: `PaymentStreams::LastChargeableInfo` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Providers::TotalBspsCapacity` (r:1 w:0)
	/// Proof: `Providers::TotalBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Providers::UsedBspsCapacity` (r:1 w:0)
	/// Proof: `Providers::UsedBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::RegisteredUsers` (r:1 w:1)
	/// Proof: `PaymentStreams::RegisteredUsers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::OnPollTicker` (r:1 w:0)
	/// Proof: `PaymentStreams::OnPollTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToBuckets` (r:0 w:2)
	/// Proof: `Providers::MainStorageProviderIdsToBuckets` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingBucketsToMove` (r:0 w:1)
	/// Proof: `FileSystem::PendingBucketsToMove` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	fn msp_respond_move_bucket_request() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4223`
		//  Estimated: `13545`
		// Minimum execution time: 256_000_000 picoseconds.
		Weight::from_parts(259_000_000, 13545)
			.saturating_add(RocksDbWeight::get().reads(37_u64))
			.saturating_add(RocksDbWeight::get().writes(12_u64))
	}
	/// Storage: `Providers::Buckets` (r:1 w:1)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:2 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::NextCollectionId` (r:1 w:1)
	/// Proof: `Nfts::NextCollectionId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionRoleOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionAccount` (r:0 w:1)
	/// Proof: `Nfts::CollectionAccount` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	fn update_bucket_privacy() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `680`
		//  Estimated: `6108`
		// Minimum execution time: 45_000_000 picoseconds.
		Weight::from_parts(46_000_000, 6108)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
	}
	/// Storage: `Providers::Buckets` (r:1 w:1)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::NextCollectionId` (r:1 w:1)
	/// Proof: `Nfts::NextCollectionId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:1 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionRoleOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionAccount` (r:0 w:1)
	/// Proof: `Nfts::CollectionAccount` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	fn create_and_associate_collection_with_bucket() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `680`
		//  Estimated: `3657`
		// Minimum execution time: 39_000_000 picoseconds.
		Weight::from_parts(40_000_000, 3657)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
	}
	/// Storage: `Providers::Buckets` (r:1 w:1)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:1 w:1)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToValuePropositions` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviderIdsToValuePropositions` (`max_values`: None, `max_size`: Some(1123), added: 3598, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:5 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `Providers::InsolventProviders` (r:2 w:0)
	/// Proof: `Providers::InsolventProviders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AwaitingTopUpFromProviders` (r:2 w:0)
	/// Proof: `Providers::AwaitingTopUpFromProviders` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::DynamicRatePaymentStreams` (r:1 w:0)
	/// Proof: `PaymentStreams::DynamicRatePaymentStreams` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::PrivilegedProviders` (r:1 w:0)
	/// Proof: `PaymentStreams::PrivilegedProviders` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::LastChargeableInfo` (r:1 w:0)
	/// Proof: `PaymentStreams::LastChargeableInfo` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Providers::TotalBspsCapacity` (r:1 w:0)
	/// Proof: `Providers::TotalBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Providers::UsedBspsCapacity` (r:1 w:0)
	/// Proof: `Providers::UsedBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::RegisteredUsers` (r:1 w:1)
	/// Proof: `PaymentStreams::RegisteredUsers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:1 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::ItemMetadataOf` (r:1 w:0)
	/// Proof: `Nfts::ItemMetadataOf` (`max_values`: None, `max_size`: Some(347), added: 2822, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionRoleOf` (r:1 w:1)
	/// Proof: `Nfts::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Attribute` (r:1 w:0)
	/// Proof: `Nfts::Attribute` (`max_values`: None, `max_size`: Some(479), added: 2954, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToBuckets` (r:0 w:1)
	/// Proof: `Providers::MainStorageProviderIdsToBuckets` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionMetadataOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionMetadataOf` (`max_values`: None, `max_size`: Some(294), added: 2769, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionAccount` (r:0 w:1)
	/// Proof: `Nfts::CollectionAccount` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	fn delete_bucket() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2863`
		//  Estimated: `13545`
		// Minimum execution time: 219_000_000 picoseconds.
		Weight::from_parts(226_000_000, 13545)
			.saturating_add(RocksDbWeight::get().reads(29_u64))
			.saturating_add(RocksDbWeight::get().writes(11_u64))
	}
	/// Storage: `Providers::Buckets` (r:1 w:0)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingBucketsToMove` (r:1 w:0)
	/// Proof: `FileSystem::PendingBucketsToMove` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `Providers::InsolventProviders` (r:2 w:0)
	/// Proof: `Providers::InsolventProviders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AwaitingTopUpFromProviders` (r:2 w:0)
	/// Proof: `Providers::AwaitingTopUpFromProviders` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:1 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::MaxReplicationTarget` (r:1 w:0)
	/// Proof: `FileSystem::MaxReplicationTarget` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ChallengesTicker` (r:1 w:0)
	/// Proof: `ProofsDealer::ChallengesTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequests` (r:1 w:1)
	/// Proof: `FileSystem::StorageRequests` (`max_values`: None, `max_size`: Some(1227), added: 3702, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::NextAvailableStorageRequestExpirationBlock` (r:1 w:1)
	/// Proof: `FileSystem::NextAvailableStorageRequestExpirationBlock` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequestExpirations` (r:1 w:1)
	/// Proof: `FileSystem::StorageRequestExpirations` (`max_values`: None, `max_size`: Some(3222), added: 5697, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::BucketsWithStorageRequests` (r:0 w:1)
	/// Proof: `FileSystem::BucketsWithStorageRequests` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	fn issue_storage_request() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `953`
		//  Estimated: `6687`
		// Minimum execution time: 84_000_000 picoseconds.
		Weight::from_parts(85_000_000, 6687)
			.saturating_add(RocksDbWeight::get().reads(15_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AccountIdToMainStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToMainStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:1)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `Providers::Buckets` (r:10 w:10)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `Providers::InsolventProviders` (r:2 w:0)
	/// Proof: `Providers::InsolventProviders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AwaitingTopUpFromProviders` (r:2 w:0)
	/// Proof: `Providers::AwaitingTopUpFromProviders` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequests` (r:200 w:200)
	/// Proof: `FileSystem::StorageRequests` (`max_values`: None, `max_size`: Some(1227), added: 3702, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:1 w:0)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToValuePropositions` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviderIdsToValuePropositions` (`max_values`: None, `max_size`: Some(1123), added: 3598, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:1 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequestBsps` (r:200 w:0)
	/// Proof: `FileSystem::StorageRequestBsps` (`max_values`: None, `max_size`: Some(97), added: 2572, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::PriorityChallengesQueue` (r:1 w:1)
	/// Proof: `ProofsDealer::PriorityChallengesQueue` (`max_values`: Some(1), `max_size`: Some(3302), added: 3797, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::BucketsWithStorageRequests` (r:0 w:200)
	/// Proof: `FileSystem::BucketsWithStorageRequests` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 10]`.
	/// The range of component `m` is `[1, 10]`.
	/// The range of component `l` is `[1, 10]`.
	fn msp_respond_storage_requests_multiple_buckets(n: u32, m: u32, l: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + l * (7257 ±0) + m * (2238 ±0) + n * (9713 ±0)`
		//  Estimated: `75030 + l * (4827 ±390) + m * (4827 ±390) + n * (41847 ±390)`
		// Minimum execution time: 1_540_000_000 picoseconds.
		Weight::from_parts(1_552_000_000, 75030)
			// Standard Error: 11_496_157
			.saturating_add(Weight::from_parts(878_421_053, 0).saturating_mul(n.into()))
			// Standard Error: 11_496_157
			.saturating_add(Weight::from_parts(523_966_175, 0).saturating_mul(m.into()))
			.saturating_add(RocksDbWeight::get().reads(56_u64))
			.saturating_add(RocksDbWeight::get().reads((24_u64).saturating_mul(n.into())))
			.saturating_add(RocksDbWeight::get().reads((3_u64).saturating_mul(m.into())))
			.saturating_add(RocksDbWeight::get().reads((3_u64).saturating_mul(l.into())))
			.saturating_add(RocksDbWeight::get().writes(45_u64))
			.saturating_add(RocksDbWeight::get().writes((24_u64).saturating_mul(n.into())))
			.saturating_add(RocksDbWeight::get().writes((3_u64).saturating_mul(m.into())))
			.saturating_add(RocksDbWeight::get().writes((3_u64).saturating_mul(l.into())))
			.saturating_add(Weight::from_parts(0, 4827).saturating_mul(l.into()))
			.saturating_add(Weight::from_parts(0, 4827).saturating_mul(m.into()))
			.saturating_add(Weight::from_parts(0, 41847).saturating_mul(n.into()))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::InsolventProviders` (r:2 w:0)
	/// Proof: `Providers::InsolventProviders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AwaitingTopUpFromProviders` (r:2 w:0)
	/// Proof: `Providers::AwaitingTopUpFromProviders` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequests` (r:1 w:1)
	/// Proof: `FileSystem::StorageRequests` (`max_values`: None, `max_size`: Some(1227), added: 3702, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequestBsps` (r:1 w:1)
	/// Proof: `FileSystem::StorageRequestBsps` (`max_values`: None, `max_size`: Some(97), added: 2572, mode: `MaxEncodedLen`)
	/// Storage: `Providers::GlobalBspsReputationWeight` (r:1 w:0)
	/// Proof: `Providers::GlobalBspsReputationWeight` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::MaxReplicationTarget` (r:1 w:0)
	/// Proof: `FileSystem::MaxReplicationTarget` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::TickRangeToMaximumThreshold` (r:1 w:0)
	/// Proof: `FileSystem::TickRangeToMaximumThreshold` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ChallengesTicker` (r:1 w:0)
	/// Proof: `ProofsDealer::ChallengesTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn bsp_volunteer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2195`
		//  Estimated: `6054`
		// Minimum execution time: 56_000_000 picoseconds.
		Weight::from_parts(61_000_000, 6054)
			.saturating_add(RocksDbWeight::get().reads(12_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::InsolventProviders` (r:2 w:0)
	/// Proof: `Providers::InsolventProviders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AwaitingTopUpFromProviders` (r:2 w:0)
	/// Proof: `Providers::AwaitingTopUpFromProviders` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:1)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequests` (r:10 w:10)
	/// Proof: `FileSystem::StorageRequests` (`max_values`: None, `max_size`: Some(1227), added: 3702, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequestBsps` (r:20 w:10)
	/// Proof: `FileSystem::StorageRequestBsps` (`max_values`: None, `max_size`: Some(97), added: 2572, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `Providers::UsedBspsCapacity` (r:1 w:1)
	/// Proof: `Providers::UsedBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::DynamicRatePaymentStreams` (r:1 w:1)
	/// Proof: `PaymentStreams::DynamicRatePaymentStreams` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:1 w:0)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::PrivilegedProviders` (r:1 w:0)
	/// Proof: `PaymentStreams::PrivilegedProviders` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::LastChargeableInfo` (r:1 w:0)
	/// Proof: `PaymentStreams::LastChargeableInfo` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Providers::TotalBspsCapacity` (r:1 w:0)
	/// Proof: `Providers::TotalBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:4 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::CurrentPricePerGigaUnitPerTick` (r:1 w:0)
	/// Proof: `PaymentStreams::CurrentPricePerGigaUnitPerTick` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `Providers::Buckets` (r:1 w:0)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::BucketsWithStorageRequests` (r:0 w:10)
	/// Proof: `FileSystem::BucketsWithStorageRequests` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 10]`.
	fn bsp_confirm_storing(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1912 + n * (327 ±0)`
		//  Estimated: `11034 + n * (5144 ±0)`
		// Minimum execution time: 293_000_000 picoseconds.
		Weight::from_parts(81_364_605, 11034)
			// Standard Error: 429_629
			.saturating_add(Weight::from_parts(230_445_297, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(24_u64))
			.saturating_add(RocksDbWeight::get().reads((3_u64).saturating_mul(n.into())))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
			.saturating_add(RocksDbWeight::get().writes((3_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 5144).saturating_mul(n.into()))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:3 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:3)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingStopStoringRequests` (r:1 w:1)
	/// Proof: `FileSystem::PendingStopStoringRequests` (`max_values`: None, `max_size`: Some(140), added: 2615, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequests` (r:1 w:1)
	/// Proof: `FileSystem::StorageRequests` (`max_values`: None, `max_size`: Some(1227), added: 3702, mode: `MaxEncodedLen`)
	/// Storage: `Providers::Buckets` (r:1 w:0)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingBucketsToMove` (r:1 w:0)
	/// Proof: `FileSystem::PendingBucketsToMove` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::MaxReplicationTarget` (r:1 w:0)
	/// Proof: `FileSystem::MaxReplicationTarget` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ChallengesTicker` (r:1 w:0)
	/// Proof: `ProofsDealer::ChallengesTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::NextAvailableStorageRequestExpirationBlock` (r:1 w:1)
	/// Proof: `FileSystem::NextAvailableStorageRequestExpirationBlock` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequestExpirations` (r:1 w:1)
	/// Proof: `FileSystem::StorageRequestExpirations` (`max_values`: None, `max_size`: Some(3222), added: 5697, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::BucketsWithStorageRequests` (r:0 w:1)
	/// Proof: `FileSystem::BucketsWithStorageRequests` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequestBsps` (r:0 w:1)
	/// Proof: `FileSystem::StorageRequestBsps` (`max_values`: None, `max_size`: Some(97), added: 2572, mode: `MaxEncodedLen`)
	fn bsp_request_stop_storing() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1369`
		//  Estimated: `8799`
		// Minimum execution time: 145_000_000 picoseconds.
		Weight::from_parts(147_000_000, 8799)
			.saturating_add(RocksDbWeight::get().reads(17_u64))
			.saturating_add(RocksDbWeight::get().writes(10_u64))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:1)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingStopStoringRequests` (r:1 w:1)
	/// Proof: `FileSystem::PendingStopStoringRequests` (`max_values`: None, `max_size`: Some(140), added: 2615, mode: `MaxEncodedLen`)
	/// Storage: `Providers::Buckets` (r:1 w:0)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `Providers::UsedBspsCapacity` (r:1 w:1)
	/// Proof: `Providers::UsedBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::DynamicRatePaymentStreams` (r:1 w:1)
	/// Proof: `PaymentStreams::DynamicRatePaymentStreams` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	/// Storage: `Providers::InsolventProviders` (r:2 w:0)
	/// Proof: `Providers::InsolventProviders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AwaitingTopUpFromProviders` (r:2 w:0)
	/// Proof: `Providers::AwaitingTopUpFromProviders` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:1 w:0)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::PrivilegedProviders` (r:1 w:0)
	/// Proof: `PaymentStreams::PrivilegedProviders` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::LastChargeableInfo` (r:1 w:0)
	/// Proof: `PaymentStreams::LastChargeableInfo` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Providers::TotalBspsCapacity` (r:1 w:0)
	/// Proof: `Providers::TotalBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:4 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::RegisteredUsers` (r:1 w:1)
	/// Proof: `PaymentStreams::RegisteredUsers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	fn bsp_confirm_stop_storing() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2203`
		//  Estimated: `11034`
		// Minimum execution time: 212_000_000 picoseconds.
		Weight::from_parts(214_000_000, 11034)
			.saturating_add(RocksDbWeight::get().reads(25_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:1)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `Providers::Buckets` (r:1 w:0)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::DynamicRatePaymentStreams` (r:1 w:1)
	/// Proof: `PaymentStreams::DynamicRatePaymentStreams` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	/// Storage: `Providers::InsolventProviders` (r:2 w:0)
	/// Proof: `Providers::InsolventProviders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AwaitingTopUpFromProviders` (r:2 w:0)
	/// Proof: `Providers::AwaitingTopUpFromProviders` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:1 w:0)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::PrivilegedProviders` (r:1 w:0)
	/// Proof: `PaymentStreams::PrivilegedProviders` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::LastChargeableInfo` (r:1 w:0)
	/// Proof: `PaymentStreams::LastChargeableInfo` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `Providers::TotalBspsCapacity` (r:1 w:0)
	/// Proof: `Providers::TotalBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Providers::UsedBspsCapacity` (r:1 w:1)
	/// Proof: `Providers::UsedBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:4 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::RegisteredUsers` (r:1 w:1)
	/// Proof: `PaymentStreams::RegisteredUsers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	fn stop_storing_for_insolvent_user_bsp() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1918`
		//  Estimated: `11034`
		// Minimum execution time: 216_000_000 picoseconds.
		Weight::from_parts(235_000_000, 11034)
			.saturating_add(RocksDbWeight::get().reads(24_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AccountIdToMainStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToMainStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `Providers::Buckets` (r:1 w:1)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:1 w:1)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:1)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `Providers::InsolventProviders` (r:2 w:0)
	/// Proof: `Providers::InsolventProviders` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AwaitingTopUpFromProviders` (r:2 w:0)
	/// Proof: `Providers::AwaitingTopUpFromProviders` (`max_values`: None, `max_size`: Some(57), added: 2532, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::DynamicRatePaymentStreams` (r:1 w:0)
	/// Proof: `PaymentStreams::DynamicRatePaymentStreams` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::PrivilegedProviders` (r:1 w:0)
	/// Proof: `PaymentStreams::PrivilegedProviders` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::LastChargeableInfo` (r:1 w:0)
	/// Proof: `PaymentStreams::LastChargeableInfo` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `Providers::TotalBspsCapacity` (r:1 w:0)
	/// Proof: `Providers::TotalBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Providers::UsedBspsCapacity` (r:1 w:0)
	/// Proof: `Providers::UsedBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:4 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::RegisteredUsers` (r:1 w:1)
	/// Proof: `PaymentStreams::RegisteredUsers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	fn stop_storing_for_insolvent_user_msp() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1523`
		//  Estimated: `11034`
		// Minimum execution time: 214_000_000 picoseconds.
		Weight::from_parts(218_000_000, 11034)
			.saturating_add(RocksDbWeight::get().reads(25_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: `Providers::Buckets` (r:1 w:0)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingFileDeletionRequests` (r:1 w:1)
	/// Proof: `FileSystem::PendingFileDeletionRequests` (`max_values`: None, `max_size`: Some(1089), added: 3564, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::NextAvailableFileDeletionRequestExpirationBlock` (r:1 w:1)
	/// Proof: `FileSystem::NextAvailableFileDeletionRequestExpirationBlock` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::FileDeletionRequestExpirations` (r:1 w:1)
	/// Proof: `FileSystem::FileDeletionRequestExpirations` (`max_values`: None, `max_size`: Some(10422), added: 12897, mode: `MaxEncodedLen`)
	fn delete_file_without_inclusion_proof() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1474`
		//  Estimated: `13887`
		// Minimum execution time: 27_000_000 picoseconds.
		Weight::from_parts(28_000_000, 13887)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `Providers::Buckets` (r:1 w:1)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:1 w:0)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToValuePropositions` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviderIdsToValuePropositions` (`max_values`: None, `max_size`: Some(1123), added: 3598, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:1 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:1)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::PriorityChallengesQueue` (r:1 w:1)
	/// Proof: `ProofsDealer::PriorityChallengesQueue` (`max_values`: Some(1), `max_size`: Some(3302), added: 3797, mode: `MaxEncodedLen`)
	fn delete_file_with_inclusion_proof() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1968`
		//  Estimated: `4787`
		// Minimum execution time: 96_000_000 picoseconds.
		Weight::from_parts(97_000_000, 4787)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AccountIdToMainStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToMainStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:1)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `Providers::Buckets` (r:1 w:1)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingFileDeletionRequests` (r:1 w:1)
	/// Proof: `FileSystem::PendingFileDeletionRequests` (`max_values`: None, `max_size`: Some(1089), added: 3564, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:1 w:0)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToValuePropositions` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviderIdsToValuePropositions` (`max_values`: None, `max_size`: Some(1123), added: 3598, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:1 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::PriorityChallengesQueue` (r:1 w:1)
	/// Proof: `ProofsDealer::PriorityChallengesQueue` (`max_values`: Some(1), `max_size`: Some(3302), added: 3797, mode: `MaxEncodedLen`)
	fn pending_file_deletion_request_submit_proof() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3264`
		//  Estimated: `4787`
		// Minimum execution time: 111_000_000 picoseconds.
		Weight::from_parts(112_000_000, 4787)
			.saturating_add(RocksDbWeight::get().reads(10_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `Parameters::Parameters` (r:1 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::TickRangeToMaximumThreshold` (r:0 w:1)
	/// Proof: `FileSystem::TickRangeToMaximumThreshold` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::MaxReplicationTarget` (r:0 w:1)
	/// Proof: `FileSystem::MaxReplicationTarget` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn set_global_parameters() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3`
		//  Estimated: `3501`
		// Minimum execution time: 4_000_000 picoseconds.
		Weight::from_parts(5_000_000, 3501)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
}
