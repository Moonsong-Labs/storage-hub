
//! Autogenerated weights for `pallet_file_system`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 43.0.0
//! DATE: 2024-12-19, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Tobiass-MacBook-Pro.local`, CPU: `<UNKNOWN>`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: `1024`

// Executed Command:
// frame-omni-bencher
// v1
// benchmark
// pallet
// --runtime
// target/production/wbuild/storage-hub-runtime/storage_hub_runtime.wasm
// --pallet
// pallet-file-system
// --extrinsic
// 
// --output
// pallets/file-system/src/weights.rs
// --template
// ../../polkadot-sdk/substrate/.maintain/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_file_system`.
pub trait WeightInfo {
	fn create_bucket() -> Weight;
	fn request_move_bucket() -> Weight;
	fn msp_respond_move_bucket_request() -> Weight;
	fn update_bucket_privacy() -> Weight;
	fn issue_storage_request() -> Weight;
	fn bsp_volunteer() -> Weight;
}

/// Weights for `pallet_file_system` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `Providers::MainStorageProviders` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::NextCollectionId` (r:1 w:1)
	/// Proof: `Nfts::NextCollectionId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:1 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Providers::Buckets` (r:1 w:1)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToValuePropositions` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviderIdsToValuePropositions` (`max_values`: None, `max_size`: Some(1123), added: 3598, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:1 w:1)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:1 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::RegisteredUsers` (r:1 w:1)
	/// Proof: `PaymentStreams::RegisteredUsers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::OnPollTicker` (r:1 w:0)
	/// Proof: `PaymentStreams::OnPollTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToBuckets` (r:0 w:1)
	/// Proof: `Providers::MainStorageProviderIdsToBuckets` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionRoleOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionAccount` (r:0 w:1)
	/// Proof: `Nfts::CollectionAccount` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	fn create_bucket() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1568`
		//  Estimated: `4588`
		// Minimum execution time: 131_000_000 picoseconds.
		Weight::from_parts(133_000_000, 4588)
			.saturating_add(T::DbWeight::get().reads(13_u64))
			.saturating_add(T::DbWeight::get().writes(11_u64))
	}
	/// Storage: `Providers::Buckets` (r:1 w:0)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingBucketsToMove` (r:1 w:1)
	/// Proof: `FileSystem::PendingBucketsToMove` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::BucketsWithStorageRequests` (r:1 w:0)
	/// Proof: `FileSystem::BucketsWithStorageRequests` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::NextAvailableMoveBucketRequestExpirationBlock` (r:1 w:1)
	/// Proof: `FileSystem::NextAvailableMoveBucketRequestExpirationBlock` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::MoveBucketRequestExpirations` (r:1 w:1)
	/// Proof: `FileSystem::MoveBucketRequestExpirations` (`max_values`: None, `max_size`: Some(6422), added: 8897, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingMoveBucketRequests` (r:0 w:1)
	/// Proof: `FileSystem::PendingMoveBucketRequests` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn request_move_bucket() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `574`
		//  Estimated: `9887`
		// Minimum execution time: 30_000_000 picoseconds.
		Weight::from_parts(31_000_000, 9887)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AccountIdToMainStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToMainStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:2 w:2)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingMoveBucketRequests` (r:1 w:1)
	/// Proof: `FileSystem::PendingMoveBucketRequests` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Providers::Buckets` (r:1 w:1)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:2 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:2 w:2)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToValuePropositions` (r:2 w:0)
	/// Proof: `Providers::MainStorageProviderIdsToValuePropositions` (`max_values`: None, `max_size`: Some(1123), added: 3598, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:5 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::DynamicRatePaymentStreams` (r:1 w:0)
	/// Proof: `PaymentStreams::DynamicRatePaymentStreams` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::PrivilegedProviders` (r:1 w:0)
	/// Proof: `PaymentStreams::PrivilegedProviders` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::LastChargeableInfo` (r:1 w:0)
	/// Proof: `PaymentStreams::LastChargeableInfo` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Providers::TotalBspsCapacity` (r:1 w:0)
	/// Proof: `Providers::TotalBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Providers::UsedBspsCapacity` (r:1 w:0)
	/// Proof: `Providers::UsedBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::RegisteredUsers` (r:1 w:1)
	/// Proof: `PaymentStreams::RegisteredUsers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::OnPollTicker` (r:1 w:0)
	/// Proof: `PaymentStreams::OnPollTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToBuckets` (r:0 w:2)
	/// Proof: `Providers::MainStorageProviderIdsToBuckets` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingBucketsToMove` (r:0 w:1)
	/// Proof: `FileSystem::PendingBucketsToMove` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	fn msp_respond_move_bucket_request() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4200`
		//  Estimated: `13545`
		// Minimum execution time: 226_000_000 picoseconds.
		Weight::from_parts(240_000_000, 13545)
			.saturating_add(T::DbWeight::get().reads(29_u64))
			.saturating_add(T::DbWeight::get().writes(12_u64))
	}
	/// Storage: `Providers::Buckets` (r:1 w:1)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:2 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::NextCollectionId` (r:1 w:1)
	/// Proof: `Nfts::NextCollectionId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionRoleOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionAccount` (r:0 w:1)
	/// Proof: `Nfts::CollectionAccount` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	fn update_bucket_privacy() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `680`
		//  Estimated: `6108`
		// Minimum execution time: 42_000_000 picoseconds.
		Weight::from_parts(47_000_000, 6108)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
	}
	/// Storage: `Providers::Buckets` (r:1 w:0)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingBucketsToMove` (r:1 w:0)
	/// Proof: `FileSystem::PendingBucketsToMove` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::ReplicationTarget` (r:1 w:0)
	/// Proof: `FileSystem::ReplicationTarget` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ChallengesTicker` (r:1 w:0)
	/// Proof: `ProofsDealer::ChallengesTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequests` (r:1 w:1)
	/// Proof: `FileSystem::StorageRequests` (`max_values`: None, `max_size`: Some(1227), added: 3702, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::NextAvailableStorageRequestExpirationBlock` (r:1 w:1)
	/// Proof: `FileSystem::NextAvailableStorageRequestExpirationBlock` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequestExpirations` (r:1 w:1)
	/// Proof: `FileSystem::StorageRequestExpirations` (`max_values`: None, `max_size`: Some(3222), added: 5697, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::BucketsWithStorageRequests` (r:0 w:1)
	/// Proof: `FileSystem::BucketsWithStorageRequests` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	fn issue_storage_request() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `865`
		//  Estimated: `6687`
		// Minimum execution time: 71_000_000 picoseconds.
		Weight::from_parts(73_000_000, 6687)
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequests` (r:1 w:1)
	/// Proof: `FileSystem::StorageRequests` (`max_values`: None, `max_size`: Some(1227), added: 3702, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequestBsps` (r:1 w:1)
	/// Proof: `FileSystem::StorageRequestBsps` (`max_values`: None, `max_size`: Some(97), added: 2572, mode: `MaxEncodedLen`)
	/// Storage: `Providers::GlobalBspsReputationWeight` (r:1 w:0)
	/// Proof: `Providers::GlobalBspsReputationWeight` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::ReplicationTarget` (r:1 w:0)
	/// Proof: `FileSystem::ReplicationTarget` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::TickRangeToMaximumThreshold` (r:1 w:0)
	/// Proof: `FileSystem::TickRangeToMaximumThreshold` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ChallengesTicker` (r:1 w:0)
	/// Proof: `ProofsDealer::ChallengesTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn bsp_volunteer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2111`
		//  Estimated: `4692`
		// Minimum execution time: 47_000_000 picoseconds.
		Weight::from_parts(50_000_000, 4692)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `Providers::MainStorageProviders` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::NextCollectionId` (r:1 w:1)
	/// Proof: `Nfts::NextCollectionId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:1 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Providers::Buckets` (r:1 w:1)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToValuePropositions` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviderIdsToValuePropositions` (`max_values`: None, `max_size`: Some(1123), added: 3598, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:1 w:1)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:1 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::RegisteredUsers` (r:1 w:1)
	/// Proof: `PaymentStreams::RegisteredUsers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::OnPollTicker` (r:1 w:0)
	/// Proof: `PaymentStreams::OnPollTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToBuckets` (r:0 w:1)
	/// Proof: `Providers::MainStorageProviderIdsToBuckets` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionRoleOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionAccount` (r:0 w:1)
	/// Proof: `Nfts::CollectionAccount` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	fn create_bucket() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1568`
		//  Estimated: `4588`
		// Minimum execution time: 131_000_000 picoseconds.
		Weight::from_parts(133_000_000, 4588)
			.saturating_add(RocksDbWeight::get().reads(13_u64))
			.saturating_add(RocksDbWeight::get().writes(11_u64))
	}
	/// Storage: `Providers::Buckets` (r:1 w:0)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingBucketsToMove` (r:1 w:1)
	/// Proof: `FileSystem::PendingBucketsToMove` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::BucketsWithStorageRequests` (r:1 w:0)
	/// Proof: `FileSystem::BucketsWithStorageRequests` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::NextAvailableMoveBucketRequestExpirationBlock` (r:1 w:1)
	/// Proof: `FileSystem::NextAvailableMoveBucketRequestExpirationBlock` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::MoveBucketRequestExpirations` (r:1 w:1)
	/// Proof: `FileSystem::MoveBucketRequestExpirations` (`max_values`: None, `max_size`: Some(6422), added: 8897, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingMoveBucketRequests` (r:0 w:1)
	/// Proof: `FileSystem::PendingMoveBucketRequests` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn request_move_bucket() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `574`
		//  Estimated: `9887`
		// Minimum execution time: 30_000_000 picoseconds.
		Weight::from_parts(31_000_000, 9887)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::AccountIdToMainStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToMainStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:2 w:2)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingMoveBucketRequests` (r:1 w:1)
	/// Proof: `FileSystem::PendingMoveBucketRequests` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Providers::Buckets` (r:1 w:1)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:2 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::UsersWithoutFunds` (r:1 w:0)
	/// Proof: `PaymentStreams::UsersWithoutFunds` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::FixedRatePaymentStreams` (r:2 w:2)
	/// Proof: `PaymentStreams::FixedRatePaymentStreams` (`max_values`: None, `max_size`: Some(137), added: 2612, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToValuePropositions` (r:2 w:0)
	/// Proof: `Providers::MainStorageProviderIdsToValuePropositions` (`max_values`: None, `max_size`: Some(1123), added: 3598, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:5 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::DynamicRatePaymentStreams` (r:1 w:0)
	/// Proof: `PaymentStreams::DynamicRatePaymentStreams` (`max_values`: None, `max_size`: Some(141), added: 2616, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::PrivilegedProviders` (r:1 w:0)
	/// Proof: `PaymentStreams::PrivilegedProviders` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::LastChargeableInfo` (r:1 w:0)
	/// Proof: `PaymentStreams::LastChargeableInfo` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Providers::TotalBspsCapacity` (r:1 w:0)
	/// Proof: `Providers::TotalBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Providers::UsedBspsCapacity` (r:1 w:0)
	/// Proof: `Providers::UsedBspsCapacity` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::RegisteredUsers` (r:1 w:1)
	/// Proof: `PaymentStreams::RegisteredUsers` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `PaymentStreams::OnPollTicker` (r:1 w:0)
	/// Proof: `PaymentStreams::OnPollTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviderIdsToBuckets` (r:0 w:2)
	/// Proof: `Providers::MainStorageProviderIdsToBuckets` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingBucketsToMove` (r:0 w:1)
	/// Proof: `FileSystem::PendingBucketsToMove` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	fn msp_respond_move_bucket_request() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4200`
		//  Estimated: `13545`
		// Minimum execution time: 226_000_000 picoseconds.
		Weight::from_parts(240_000_000, 13545)
			.saturating_add(RocksDbWeight::get().reads(29_u64))
			.saturating_add(RocksDbWeight::get().writes(12_u64))
	}
	/// Storage: `Providers::Buckets` (r:1 w:1)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::Collection` (r:2 w:1)
	/// Proof: `Nfts::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::NextCollectionId` (r:1 w:1)
	/// Proof: `Nfts::NextCollectionId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionRoleOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionConfigOf` (r:0 w:1)
	/// Proof: `Nfts::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nfts::CollectionAccount` (r:0 w:1)
	/// Proof: `Nfts::CollectionAccount` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	fn update_bucket_privacy() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `680`
		//  Estimated: `6108`
		// Minimum execution time: 42_000_000 picoseconds.
		Weight::from_parts(47_000_000, 6108)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
	}
	/// Storage: `Providers::Buckets` (r:1 w:0)
	/// Proof: `Providers::Buckets` (`max_values`: None, `max_size`: Some(192), added: 2667, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::PendingBucketsToMove` (r:1 w:0)
	/// Proof: `FileSystem::PendingBucketsToMove` (`max_values`: None, `max_size`: Some(48), added: 2523, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `Providers::MainStorageProviders` (r:1 w:0)
	/// Proof: `Providers::MainStorageProviders` (`max_values`: None, `max_size`: Some(647), added: 3122, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::ReplicationTarget` (r:1 w:0)
	/// Proof: `FileSystem::ReplicationTarget` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ChallengesTicker` (r:1 w:0)
	/// Proof: `ProofsDealer::ChallengesTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequests` (r:1 w:1)
	/// Proof: `FileSystem::StorageRequests` (`max_values`: None, `max_size`: Some(1227), added: 3702, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::NextAvailableStorageRequestExpirationBlock` (r:1 w:1)
	/// Proof: `FileSystem::NextAvailableStorageRequestExpirationBlock` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequestExpirations` (r:1 w:1)
	/// Proof: `FileSystem::StorageRequestExpirations` (`max_values`: None, `max_size`: Some(3222), added: 5697, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::BucketsWithStorageRequests` (r:0 w:1)
	/// Proof: `FileSystem::BucketsWithStorageRequests` (`max_values`: None, `max_size`: Some(96), added: 2571, mode: `MaxEncodedLen`)
	fn issue_storage_request() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `865`
		//  Estimated: `6687`
		// Minimum execution time: 71_000_000 picoseconds.
		Weight::from_parts(73_000_000, 6687)
			.saturating_add(RocksDbWeight::get().reads(10_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequests` (r:1 w:1)
	/// Proof: `FileSystem::StorageRequests` (`max_values`: None, `max_size`: Some(1227), added: 3702, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::StorageRequestBsps` (r:1 w:1)
	/// Proof: `FileSystem::StorageRequestBsps` (`max_values`: None, `max_size`: Some(97), added: 2572, mode: `MaxEncodedLen`)
	/// Storage: `Providers::GlobalBspsReputationWeight` (r:1 w:0)
	/// Proof: `Providers::GlobalBspsReputationWeight` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::ReplicationTarget` (r:1 w:0)
	/// Proof: `FileSystem::ReplicationTarget` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `FileSystem::TickRangeToMaximumThreshold` (r:1 w:0)
	/// Proof: `FileSystem::TickRangeToMaximumThreshold` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ChallengesTicker` (r:1 w:0)
	/// Proof: `ProofsDealer::ChallengesTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn bsp_volunteer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2111`
		//  Estimated: `4692`
		// Minimum execution time: 47_000_000 picoseconds.
		Weight::from_parts(50_000_000, 4692)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
}
