
//! Autogenerated weights for `pallet_proofs_dealer`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 43.0.0
//! DATE: 2024-11-20, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Facundos-MacBook-Pro.local`, CPU: `<UNKNOWN>`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: `1024`

// Executed Command:
// target/release/storage-hub-node
// benchmark
// pallet
// --runtime
// ./target/release/wbuild/storage-hub-runtime/storage_hub_runtime.wasm
// --genesis-builder
// runtime
// --wasm-execution
// compiled
// --pallet
// pallet_proofs_dealer
// --extrinsic
// trim_valid_proof_submitters_last_ticks_constant_execution
// --steps
// 50
// --repeat
// 20
// --output
// pallets/proofs-dealer/src/on_poll_weights.rs
// --template
// ../polkadot-sdk/substrate/.maintain/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_proofs_dealer`.
pub trait WeightInfo {
	fn trim_valid_proof_submitters_last_ticks_constant_execution() -> Weight;
}

/// Weights for `pallet_proofs_dealer` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `ProofsDealer::LastDeletedTick` (r:1 w:0)
	/// Proof: `ProofsDealer::LastDeletedTick` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ChallengesTicker` (r:1 w:0)
	/// Proof: `ProofsDealer::ChallengesTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn trim_valid_proof_submitters_last_ticks_constant_execution() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `80`
		//  Estimated: `1489`
		// Minimum execution time: 4_000_000 picoseconds.
		Weight::from_parts(5_000_000, 1489)
			.saturating_add(T::DbWeight::get().reads(2_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `ProofsDealer::LastDeletedTick` (r:1 w:0)
	/// Proof: `ProofsDealer::LastDeletedTick` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ChallengesTicker` (r:1 w:0)
	/// Proof: `ProofsDealer::ChallengesTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn trim_valid_proof_submitters_last_ticks_constant_execution() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `80`
		//  Estimated: `1489`
		// Minimum execution time: 4_000_000 picoseconds.
		Weight::from_parts(5_000_000, 1489)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
	}
}
