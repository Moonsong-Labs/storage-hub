
//! Autogenerated weights for `pallet_proofs_dealer`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 43.0.0
//! DATE: 2024-11-16, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Facundos-MacBook-Pro.local`, CPU: `<UNKNOWN>`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: `1024`

// Executed Command:
// target/release/storage-hub-node
// benchmark
// pallet
// --runtime
// ./target/release/wbuild/storage-hub-runtime/storage_hub_runtime.wasm
// --genesis-builder
// runtime
// --wasm-execution
// compiled
// --pallet
// pallet_proofs_dealer
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// pallets/proofs-dealer/src/weights.rs
// --template
// ../polkadot-sdk/substrate/.maintain/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_proofs_dealer`.
pub trait WeightInfo {
	fn challenge() -> Weight;
	fn submit_proof_no_checkpoint_challenges_key_proofs(n: u32, ) -> Weight;
	fn submit_proof_with_checkpoint_challenges_key_proofs(n: u32, ) -> Weight;
	fn new_challenges_round(n: u32, ) -> Weight;
	fn new_checkpoint_challenge_round(n: u32, ) -> Weight;
}

/// Weights for `pallet_proofs_dealer` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ChallengesQueue` (r:1 w:1)
	/// Proof: `ProofsDealer::ChallengesQueue` (`max_values`: Some(1), `max_size`: Some(3202), added: 3697, mode: `MaxEncodedLen`)
	fn challenge() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `220`
		//  Estimated: `4687`
		// Minimum execution time: 42_000_000 picoseconds.
		Weight::from_parts(43_000_000, 4687)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:1)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::LastTickProviderSubmittedAProofFor` (r:1 w:1)
	/// Proof: `ProofsDealer::LastTickProviderSubmittedAProofFor` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:0)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ChallengesTicker` (r:1 w:0)
	/// Proof: `ProofsDealer::ChallengesTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::TickToChallengesSeed` (r:1 w:0)
	/// Proof: `ProofsDealer::TickToChallengesSeed` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::LastCheckpointTick` (r:1 w:0)
	/// Proof: `ProofsDealer::LastCheckpointTick` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::TickToCheckpointChallenges` (r:1 w:0)
	/// Proof: `ProofsDealer::TickToCheckpointChallenges` (`max_values`: None, `max_size`: Some(681), added: 3156, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ValidProofSubmittersLastTicks` (r:1 w:1)
	/// Proof: `ProofsDealer::ValidProofSubmittersLastTicks` (`max_values`: None, `max_size`: Some(32022), added: 34497, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::TickToProvidersDeadlines` (r:0 w:2)
	/// Proof: `ProofsDealer::TickToProvidersDeadlines` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 20]`.
	fn submit_proof_no_checkpoint_challenges_key_proofs(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1411`
		//  Estimated: `35487`
		// Minimum execution time: 365_000_000 picoseconds.
		Weight::from_parts(279_488_753, 35487)
			// Standard Error: 68_190
			.saturating_add(Weight::from_parts(85_710_304, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::LastTickProviderSubmittedAProofFor` (r:1 w:1)
	/// Proof: `ProofsDealer::LastTickProviderSubmittedAProofFor` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:0)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ChallengesTicker` (r:1 w:0)
	/// Proof: `ProofsDealer::ChallengesTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::TickToChallengesSeed` (r:1 w:0)
	/// Proof: `ProofsDealer::TickToChallengesSeed` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::LastCheckpointTick` (r:1 w:0)
	/// Proof: `ProofsDealer::LastCheckpointTick` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::TickToCheckpointChallenges` (r:1 w:0)
	/// Proof: `ProofsDealer::TickToCheckpointChallenges` (`max_values`: None, `max_size`: Some(681), added: 3156, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ValidProofSubmittersLastTicks` (r:1 w:1)
	/// Proof: `ProofsDealer::ValidProofSubmittersLastTicks` (`max_values`: None, `max_size`: Some(32022), added: 34497, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::TickToProvidersDeadlines` (r:0 w:2)
	/// Proof: `ProofsDealer::TickToProvidersDeadlines` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[21, 40]`.
	fn submit_proof_with_checkpoint_challenges_key_proofs(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1411`
		//  Estimated: `35487`
		// Minimum execution time: 2_031_000_000 picoseconds.
		Weight::from_parts(404_450_626, 35487)
			// Standard Error: 627_702
			.saturating_add(Weight::from_parts(79_670_398, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `ProofsDealer::ChallengesTicker` (r:1 w:1)
	/// Proof: `ProofsDealer::ChallengesTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Randomness::LatestParentBlockRandomness` (r:1 w:0)
	/// Proof: `Randomness::LatestParentBlockRandomness` (`max_values`: Some(1), `max_size`: Some(36), added: 531, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::LastCheckpointTick` (r:1 w:0)
	/// Proof: `ProofsDealer::LastCheckpointTick` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::TickToCheckpointChallenges` (r:1 w:0)
	/// Proof: `ProofsDealer::TickToCheckpointChallenges` (`max_values`: None, `max_size`: Some(681), added: 3156, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:3 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::TickToCheckForSlashableProviders` (r:1 w:1)
	/// Proof: `ProofsDealer::TickToCheckForSlashableProviders` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::TickToProvidersDeadlines` (r:1001 w:2000)
	/// Proof: `ProofsDealer::TickToProvidersDeadlines` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::SlashableProviders` (r:1000 w:1000)
	/// Proof: `ProofsDealer::SlashableProviders` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::LastTickProviderSubmittedAProofFor` (r:1000 w:1000)
	/// Proof: `ProofsDealer::LastTickProviderSubmittedAProofFor` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1000 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1000 w:0)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::TickToChallengesSeed` (r:0 w:1)
	/// Proof: `ProofsDealer::TickToChallengesSeed` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[0, 1000]`.
	fn new_challenges_round(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1109 + n * (308 Â±0)`
		//  Estimated: `8523 + n * (3158 Â±0)`
		// Minimum execution time: 27_000_000 picoseconds.
		Weight::from_parts(27_000_000, 8523)
			// Standard Error: 38_005
			.saturating_add(Weight::from_parts(28_136_667, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().reads((5_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
			.saturating_add(T::DbWeight::get().writes((4_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 3158).saturating_mul(n.into()))
	}
	/// Storage: `ProofsDealer::PriorityChallengesQueue` (r:1 w:1)
	/// Proof: `ProofsDealer::PriorityChallengesQueue` (`max_values`: Some(1), `max_size`: Some(3302), added: 3797, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ChallengesQueue` (r:1 w:1)
	/// Proof: `ProofsDealer::ChallengesQueue` (`max_values`: Some(1), `max_size`: Some(3202), added: 3697, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::LastCheckpointTick` (r:1 w:1)
	/// Proof: `ProofsDealer::LastCheckpointTick` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::TickToCheckpointChallenges` (r:0 w:2)
	/// Proof: `ProofsDealer::TickToCheckpointChallenges` (`max_values`: None, `max_size`: Some(681), added: 3156, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[0, 20]`.
	fn new_checkpoint_challenge_round(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `104 + n * (32 Â±0)`
		//  Estimated: `4787`
		// Minimum execution time: 11_000_000 picoseconds.
		Weight::from_parts(12_402_285, 4787)
			// Standard Error: 3_095
			.saturating_add(Weight::from_parts(249_969, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ChallengesQueue` (r:1 w:1)
	/// Proof: `ProofsDealer::ChallengesQueue` (`max_values`: Some(1), `max_size`: Some(3202), added: 3697, mode: `MaxEncodedLen`)
	fn challenge() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `220`
		//  Estimated: `4687`
		// Minimum execution time: 42_000_000 picoseconds.
		Weight::from_parts(43_000_000, 4687)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:1)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::LastTickProviderSubmittedAProofFor` (r:1 w:1)
	/// Proof: `ProofsDealer::LastTickProviderSubmittedAProofFor` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:0)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ChallengesTicker` (r:1 w:0)
	/// Proof: `ProofsDealer::ChallengesTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::TickToChallengesSeed` (r:1 w:0)
	/// Proof: `ProofsDealer::TickToChallengesSeed` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::LastCheckpointTick` (r:1 w:0)
	/// Proof: `ProofsDealer::LastCheckpointTick` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::TickToCheckpointChallenges` (r:1 w:0)
	/// Proof: `ProofsDealer::TickToCheckpointChallenges` (`max_values`: None, `max_size`: Some(681), added: 3156, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ValidProofSubmittersLastTicks` (r:1 w:1)
	/// Proof: `ProofsDealer::ValidProofSubmittersLastTicks` (`max_values`: None, `max_size`: Some(32022), added: 34497, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::TickToProvidersDeadlines` (r:0 w:2)
	/// Proof: `ProofsDealer::TickToProvidersDeadlines` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 20]`.
	fn submit_proof_no_checkpoint_challenges_key_proofs(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1411`
		//  Estimated: `35487`
		// Minimum execution time: 365_000_000 picoseconds.
		Weight::from_parts(279_488_753, 35487)
			// Standard Error: 68_190
			.saturating_add(Weight::from_parts(85_710_304, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(11_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `Providers::AccountIdToBackupStorageProviderId` (r:1 w:0)
	/// Proof: `Providers::AccountIdToBackupStorageProviderId` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::LastTickProviderSubmittedAProofFor` (r:1 w:1)
	/// Proof: `ProofsDealer::LastTickProviderSubmittedAProofFor` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:0)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:2 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ChallengesTicker` (r:1 w:0)
	/// Proof: `ProofsDealer::ChallengesTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::TickToChallengesSeed` (r:1 w:0)
	/// Proof: `ProofsDealer::TickToChallengesSeed` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::LastCheckpointTick` (r:1 w:0)
	/// Proof: `ProofsDealer::LastCheckpointTick` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::TickToCheckpointChallenges` (r:1 w:0)
	/// Proof: `ProofsDealer::TickToCheckpointChallenges` (`max_values`: None, `max_size`: Some(681), added: 3156, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ValidProofSubmittersLastTicks` (r:1 w:1)
	/// Proof: `ProofsDealer::ValidProofSubmittersLastTicks` (`max_values`: None, `max_size`: Some(32022), added: 34497, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::TickToProvidersDeadlines` (r:0 w:2)
	/// Proof: `ProofsDealer::TickToProvidersDeadlines` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[21, 40]`.
	fn submit_proof_with_checkpoint_challenges_key_proofs(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1411`
		//  Estimated: `35487`
		// Minimum execution time: 2_031_000_000 picoseconds.
		Weight::from_parts(404_450_626, 35487)
			// Standard Error: 627_702
			.saturating_add(Weight::from_parts(79_670_398, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(11_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `ProofsDealer::ChallengesTicker` (r:1 w:1)
	/// Proof: `ProofsDealer::ChallengesTicker` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Randomness::LatestParentBlockRandomness` (r:1 w:0)
	/// Proof: `Randomness::LatestParentBlockRandomness` (`max_values`: Some(1), `max_size`: Some(36), added: 531, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::LastCheckpointTick` (r:1 w:0)
	/// Proof: `ProofsDealer::LastCheckpointTick` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::TickToCheckpointChallenges` (r:1 w:0)
	/// Proof: `ProofsDealer::TickToCheckpointChallenges` (`max_values`: None, `max_size`: Some(681), added: 3156, mode: `MaxEncodedLen`)
	/// Storage: `Parameters::Parameters` (r:3 w:0)
	/// Proof: `Parameters::Parameters` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::TickToCheckForSlashableProviders` (r:1 w:1)
	/// Proof: `ProofsDealer::TickToCheckForSlashableProviders` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::TickToProvidersDeadlines` (r:1001 w:2000)
	/// Proof: `ProofsDealer::TickToProvidersDeadlines` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::SlashableProviders` (r:1000 w:1000)
	/// Proof: `ProofsDealer::SlashableProviders` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::LastTickProviderSubmittedAProofFor` (r:1000 w:1000)
	/// Proof: `ProofsDealer::LastTickProviderSubmittedAProofFor` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Providers::BackupStorageProviders` (r:1000 w:0)
	/// Proof: `Providers::BackupStorageProviders` (`max_values`: None, `max_size`: Some(683), added: 3158, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1000 w:0)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(175), added: 2650, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::TickToChallengesSeed` (r:0 w:1)
	/// Proof: `ProofsDealer::TickToChallengesSeed` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[0, 1000]`.
	fn new_challenges_round(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1109 + n * (308 Â±0)`
		//  Estimated: `8523 + n * (3158 Â±0)`
		// Minimum execution time: 27_000_000 picoseconds.
		Weight::from_parts(27_000_000, 8523)
			// Standard Error: 38_005
			.saturating_add(Weight::from_parts(28_136_667, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(10_u64))
			.saturating_add(RocksDbWeight::get().reads((5_u64).saturating_mul(n.into())))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
			.saturating_add(RocksDbWeight::get().writes((4_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 3158).saturating_mul(n.into()))
	}
	/// Storage: `ProofsDealer::PriorityChallengesQueue` (r:1 w:1)
	/// Proof: `ProofsDealer::PriorityChallengesQueue` (`max_values`: Some(1), `max_size`: Some(3302), added: 3797, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::ChallengesQueue` (r:1 w:1)
	/// Proof: `ProofsDealer::ChallengesQueue` (`max_values`: Some(1), `max_size`: Some(3202), added: 3697, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::LastCheckpointTick` (r:1 w:1)
	/// Proof: `ProofsDealer::LastCheckpointTick` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `ProofsDealer::TickToCheckpointChallenges` (r:0 w:2)
	/// Proof: `ProofsDealer::TickToCheckpointChallenges` (`max_values`: None, `max_size`: Some(681), added: 3156, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[0, 20]`.
	fn new_checkpoint_challenge_round(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `104 + n * (32 Â±0)`
		//  Estimated: `4787`
		// Minimum execution time: 11_000_000 picoseconds.
		Weight::from_parts(12_402_285, 4787)
			// Standard Error: 3_095
			.saturating_add(Weight::from_parts(249_969, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
}
