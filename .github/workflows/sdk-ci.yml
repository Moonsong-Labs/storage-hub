name: sdk-ci

on:
  push:
    branches:
      - '**'
    paths:
      - 'sdk/**'
  pull_request:
    branches:
      - '**'
    paths:
      - 'sdk/**'

jobs:
  sdk:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: sdk

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Node & pnpm setup
      - name: Setup pnpm & cache
        uses: ./.github/workflow-templates/setup-pnpm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Rust toolchain with wasm target
      - name: Setup Rust toolchain (for wasm)
        uses: actions-rust-lang/setup-rust-toolchain@v1.8
        with:
          target: wasm32-unknown-unknown
          cache: false

      # Cache wasm-pack binary
      - name: Cache wasm-pack
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin/wasm-pack
          key: wasm-pack-v0.12.1

      - name: Install wasm-pack
        run: curl -sSf https://rustwasm.github.io/wasm-pack/installer/init.sh | sh

      # Install dependencies
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Build packages
      - name: Build
        run: pnpm build

      # Lint & format check
      - name: Lint
        run: pnpm lint

      - name: Prettier check
        run: pnpm run format:check

      # TypeScript type-check
      - name: Type check
        run: pnpm typecheck

      # Unit tests core
      - name: Run tests
        run: pnpm test:core -- --run

      # Unit tests client
      - name: Run tests
        run: pnpm test:msp-client -- --run

      # Coverage check (fails if coverage <80%)
      - name: Coverage
        run: pnpm run coverage -- --run

# TODO: Bundle size guard
#   - name: Size limit
#     run: pnpm size 

  standalone-install:
    name: Standalone install (Next.js)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    env:
      CI: "true"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm & cache
        uses: ./.github/workflow-templates/setup-pnpm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Next.js app in /tmp
        run: |
          rm -rf /tmp/hello_world_nextjs
          pnpm dlx create-next-app@latest /tmp/hello_world_nextjs --yes --ts --eslint --app --tailwind false

      - name: Install SDK packages
        working-directory: /tmp/hello_world_nextjs
        run: pnpm add @storagehub-sdk/core @storagehub-sdk/msp-client

      - name: Smoke build
        working-directory: /tmp/hello_world_nextjs
        run: pnpm build