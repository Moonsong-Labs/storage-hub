name: Lint and Format

on:
  pull_request:
  push:
    branches:
      - main
      - perm-*
  workflow_dispatch:
    inputs:
      pull_request:
        description: set to pull_request number to execute on external pr
        required: false

jobs:
  check-rust-fmt:
    name: "Check format with rustfmt"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1.8
        with:
          components: rustfmt
      - name: Rustfmt Check
        uses: actions-rust-lang/rustfmt@v1

  check-rust-lint:
    name: "Check lint with clippy"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1.8
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Install libpq-dev
        run: sudo apt-get update && sudo apt-get install -y libpq-dev
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: SKIP_WASM_BUILD=1 env -u RUSTFLAGS cargo clippy --features try-runtime,runtime-benchmarks --locked
        env:
          RUSTFLAGS: -D warnings

  check-ts-fmt:
    name: "Check format with biome"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflow-templates/setup-pnpm
      - run: pnpm install
      - run: pnpm fmt

  check-ts-lint:
    name: "Check lint with biome"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflow-templates/setup-pnpm
      - run: pnpm install
      - run: pnpm lint

  typecheck-ts:
    name: "Typecheck with tsc"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflow-templates/setup-pnpm
      - run: pnpm install
      - run: |
          cd test
          pnpm typecheck
