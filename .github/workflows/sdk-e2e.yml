name: StorageHub SDK - E2E tests

on:
  pull_request:
  push:
    branches:
      - '**'
  workflow_dispatch:

env:
  FORCE_COLOR: 1
  HEADLESS: 'false'

jobs:
  e2e-wallet-metamask:
    name: E2E Wallet Tests (MetaMask)
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm & cache
        uses: ./.github/workflow-templates/setup-pnpm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install Rust toolchain (for wasm)
        uses: actions-rust-lang/setup-rust-toolchain@v1.8
        with:
          target: wasm32-unknown-unknown
          cache: false

      - name: Install wasm-pack
        run: curl -sSf https://rustwasm.github.io/wasm-pack/installer/init.sh | sh

      - name: Install dependencies (sdk)
        working-directory: sdk
        run: pnpm install --frozen-lockfile

      - name: Build SDK
        working-directory: sdk
        run: pnpm build

      - name: Install e2e deps (sdk/e2e)
        working-directory: sdk/e2e
        run: pnpm install --frozen-lockfile

      - name: Install Playwright Chromium with system deps (sdk/e2e)
        working-directory: sdk/e2e
        run: |
          pnpm exec playwright install --with-deps chromium

      - name: Run Playwright tests (headless via xvfb) (sdk/e2e)
        working-directory: sdk/e2e
        run: |
          xvfb-run -a pnpm exec playwright test --project metamask

      - name: Upload Playwright report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-wallet-metamask
          path: /tmp/playwright-report/
          retention-days: 14

  e2e-backend-msp:
    name: E2E Backend Tests (MSP Client)
    runs-on: ubuntu-latest
    env:
      HEADLESS: 'false'
      RUST_LOG: info
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm & cache
        uses: ./.github/workflow-templates/setup-pnpm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install Rust toolchain (for wasm)
        uses: actions-rust-lang/setup-rust-toolchain@v1.8
        with:
          target: wasm32-unknown-unknown
          cache: false

      - name: Setup Protobuf (protoc)
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install wasm-pack
        run: curl -sSf https://rustwasm.github.io/wasm-pack/installer/init.sh | sh

      - name: Install dependencies (sdk workspace, no scripts)
        working-directory: sdk
        run: pnpm install --frozen-lockfile

      - name: Build SDK (core dist + types + msp-client)
        working-directory: sdk
        run: pnpm build

      - name: Build backend (mocks)
        run: cargo build --bin sh-msp-backend --features mocks

      - name: Run backend (mocks)
        run: |
          nohup bash -lc "./target/debug/sh-msp-backend --host 127.0.0.1 --port 8080 > /dev/null 2>&1 &"
          sleep 5

      - name: Install e2e deps (sdk/e2e)
        working-directory: sdk/e2e
        run: pnpm install --frozen-lockfile

      - name: Install Playwright Chromium with system deps (sdk/e2e)
        working-directory: sdk/e2e
        run: pnpm exec playwright install --with-deps chromium

      - name: Run MSP E2E (web)
        working-directory: sdk/e2e
        run: xvfb-run -a pnpm exec playwright test --project msp

      - name: Upload Playwright report (Backend MSP)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-backend-msp
          path: /tmp/playwright-report/
          retention-days: 14
