# MSP Backend Configuration Example
# This file demonstrates all available configuration options for the MSP backend service

# Server configuration
# The host address to bind the HTTP server to
host = "127.0.0.1"
# The port to bind the HTTP server to (default: 8080)
port = 8080

# API configuration for pagination and request handling
[api]
# Default number of items per page in paginated API responses (default: 20)
# This value is used when clients don't specify a limit
default_page_size = 20
# Maximum allowed page size for paginated API responses (default: 100)
# Requests exceeding this limit will be capped to this value
max_page_size = 100

[auth]
jws_secret = "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"

# StorageHub RPC configuration
[storage_hub]
# WebSocket RPC endpoint for the StorageHub node
# Use ws:// for unencrypted or wss:// for TLS-encrypted connections
rpc_url = "ws://localhost:9944"
# Request timeout in seconds (optional, default: 30)
# Increase this value for slower networks or heavy operations
timeout_secs = 30
# Maximum concurrent RPC requests (optional, default: 100)
# Adjust based on your node's capacity and network conditions
max_concurrent_requests = 100
# Whether to verify TLS certificates when using wss:// connections
# Set to false only for development environments with self-signed certificates
verify_tls = true
# Enable mock mode for testing (requires 'mocks' feature to be enabled at compile time)
# When true, uses mock RPC connections instead of real network calls
# mock_mode = false

# Database configuration
[database]
# PostgreSQL connection URL
# Format: postgresql://[user[:password]@][host][:port][/database]
# Example for Docker environment: postgresql://postgres:postgres@docker-sh-postgres-1:5432/storage_hub
url = "postgresql://postgres:postgres@localhost:5432/storage_hub"
# Enable mock mode for testing (requires 'mocks' feature to be enabled at compile time)
# When true, uses in-memory mock database instead of real PostgreSQL connection
# mock_mode = false