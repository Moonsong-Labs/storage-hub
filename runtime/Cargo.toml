[package]
name = "storage-hub-runtime"
version = "0.1.0"
description = "StorageHub Runtime - a decentralised storage solution designed for the Polkadot ecosystem."
homepage = { workspace = true }
license = { workspace = true }
authors = { workspace = true }
repository = { workspace = true }
edition = { workspace = true }

[lints]
workspace = true

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[build-dependencies]
substrate-wasm-builder = { workspace = true, optional = true }
docify = "0.2.8"

[dependencies]
codec = { workspace = true }
num-bigint = { workspace = true }
hex-literal = { workspace = true, optional = true }
log = { workspace = true }
smallvec = { workspace = true }
scale-info = { workspace = true }
serde_json = { features = [
	"alloc",
], workspace = true, default-features = false }

# Local
pallet-bucket-nfts = { workspace = true }
pallet-cr-randomness = { workspace = true }
pallet-file-system = { workspace = true }
pallet-file-system-runtime-api = { workspace = true }
pallet-parameters = { workspace = true }
pallet-payment-streams = { workspace = true }
pallet-payment-streams-runtime-api = { workspace = true }
pallet-proofs-dealer = { workspace = true }
pallet-proofs-dealer-runtime-api = { workspace = true }
pallet-randomness = { workspace = true }
pallet-storage-providers = { workspace = true }
pallet-storage-providers-runtime-api = { workspace = true }

shp-constants = { workspace = true }
shp-data-price-updater = { workspace = true }
shp-file-key-verifier = { workspace = true }
shp-file-metadata = { workspace = true }
shp-forest-verifier = { workspace = true }
shp-opaque = { workspace = true }
shp-traits = { workspace = true }
shp-treasury-funding = { workspace = true }
shp-types = { workspace = true }

# Substrate
frame-support = { workspace = true }
frame-benchmarking = { workspace = true, optional = true }
frame-executive = { workspace = true }
frame-metadata-hash-extension = { workspace = true }
frame-system = { workspace = true }
frame-system-benchmarking = { workspace = true, optional = true }
frame-system-rpc-runtime-api = { workspace = true }
frame-try-runtime = { workspace = true, optional = true }
pallet-aura = { workspace = true }
pallet-authorship = { workspace = true }
pallet-balances = { workspace = true }
pallet-message-queue = { workspace = true }
pallet-nfts = { workspace = true }
pallet-session = { workspace = true }
pallet-sudo = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-core = { workspace = true }
sp-genesis-builder = { workspace = true }
sp-inherents = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true }
sp-session = { workspace = true }
sp-std = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-trie = { workspace = true }
sp-version = { workspace = true }
sp-weights = { workspace = true }

# Polkadot
pallet-xcm = { workspace = true }
polkadot-parachain-primitives = { workspace = true }
polkadot-runtime-common = { workspace = true }
xcm = { workspace = true }
xcm-builder = { workspace = true }
xcm-executor = { workspace = true }
xcm-runtime-apis = { workspace = true }

# Cumulus
cumulus-pallet-aura-ext = { workspace = true }
cumulus-pallet-parachain-system = { workspace = true }
cumulus-pallet-session-benchmarking = { workspace = true }
cumulus-pallet-xcm = { workspace = true }
cumulus-pallet-xcmp-queue = { workspace = true }
cumulus-primitives-aura = { workspace = true }
cumulus-primitives-core = { workspace = true }
cumulus-primitives-utility = { workspace = true }
cumulus-primitives-storage-weight-reclaim = { workspace = true }
pallet-collator-selection = { workspace = true }
parachains-common = { workspace = true }
parachain-info = { workspace = true }

[features]
default = ["std"]
std = [
	"codec/std",
	"cumulus-pallet-aura-ext/std",
	"cumulus-pallet-parachain-system/std",
	"cumulus-pallet-session-benchmarking/std",
	"cumulus-pallet-xcm/std",
	"cumulus-pallet-xcmp-queue/std",
	"cumulus-primitives-aura/std",
	"cumulus-primitives-core/std",
	"cumulus-primitives-utility/std",
	"cumulus-primitives-storage-weight-reclaim/std",
	"frame-benchmarking?/std",
	"frame-executive/std",
	"frame-metadata-hash-extension/std",
	"frame-support/std",
	"frame-system-benchmarking?/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",
	"frame-try-runtime?/std",
	"log/std",
	"pallet-aura/std",
	"pallet-authorship/std",
	"pallet-balances/std",
	"pallet-bucket-nfts/std",
	"pallet-collator-selection/std",
	"pallet-cr-randomness/std",
	"pallet-file-system/std",
	"pallet-file-system-runtime-api/std",
	"pallet-message-queue/std",
	"pallet-nfts/std",
	"pallet-parameters/std",
	"pallet-payment-streams/std",
	"pallet-payment-streams-runtime-api/std",
	"pallet-proofs-dealer/std",
	"pallet-proofs-dealer-runtime-api/std",
	"pallet-randomness/std",
	"pallet-session/std",
	"pallet-storage-providers/std",
	"pallet-storage-providers-runtime-api/std",
	"pallet-sudo/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",
	"pallet-xcm/std",
	"parachain-info/std",
	"parachains-common/std",
	"polkadot-parachain-primitives/std",
	"polkadot-runtime-common/std",
	"scale-info/std",
	"serde_json/std",
	"shp-constants/std",
	"shp-file-key-verifier/std",
	"shp-file-metadata/std",
	"shp-forest-verifier/std",
	"shp-traits/std",
	"shp-treasury-funding/std",
	"sp-api/std",
	"sp-block-builder/std",
	"sp-consensus-aura/std",
	"sp-core/std",
	"sp-genesis-builder/std",
	"sp-inherents/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-std/std",
	"sp-transaction-pool/std",
	"sp-version/std",
	"substrate-wasm-builder",
	"xcm-builder/std",
	"xcm-executor/std",
	"xcm-runtime-apis/std",
	"xcm/std",
]

runtime-benchmarks = [
	"cumulus-pallet-parachain-system/runtime-benchmarks",
	"cumulus-pallet-session-benchmarking/runtime-benchmarks",
	"cumulus-pallet-xcmp-queue/runtime-benchmarks",
	"cumulus-primitives-core/runtime-benchmarks",
	"cumulus-primitives-utility/runtime-benchmarks",
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"hex-literal",
	"pallet-balances/runtime-benchmarks",
	"pallet-bucket-nfts/runtime-benchmarks",
	"pallet-cr-randomness/runtime-benchmarks",
	"pallet-collator-selection/runtime-benchmarks",
	"pallet-file-system/runtime-benchmarks",
	"pallet-message-queue/runtime-benchmarks",
	"pallet-nfts/runtime-benchmarks",
	"pallet-parameters/runtime-benchmarks",
	"pallet-payment-streams/runtime-benchmarks",
	"pallet-proofs-dealer/runtime-benchmarks",
	"pallet-randomness/runtime-benchmarks",
	"pallet-storage-providers/runtime-benchmarks",
	"pallet-sudo/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-xcm/runtime-benchmarks",
	"parachains-common/runtime-benchmarks",
	"polkadot-parachain-primitives/runtime-benchmarks",
	"polkadot-runtime-common/runtime-benchmarks",
	"shp-constants/runtime-benchmarks",
	"shp-file-key-verifier/runtime-benchmarks",
	"shp-file-metadata/runtime-benchmarks",
	"shp-forest-verifier/runtime-benchmarks",
	"shp-traits/runtime-benchmarks",
	"shp-treasury-funding/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"xcm-builder/runtime-benchmarks",
	"xcm-executor/runtime-benchmarks",
	"xcm-runtime-apis/runtime-benchmarks",
]

try-runtime = [
	"cumulus-pallet-aura-ext/try-runtime",
	"cumulus-pallet-parachain-system/try-runtime",
	"cumulus-pallet-xcm/try-runtime",
	"cumulus-pallet-xcmp-queue/try-runtime",
	"frame-executive/try-runtime",
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"frame-try-runtime/try-runtime",
	"pallet-aura/try-runtime",
	"pallet-authorship/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-bucket-nfts/try-runtime",
	"pallet-collator-selection/try-runtime",
	"pallet-cr-randomness/try-runtime",
	"pallet-file-system/try-runtime",
	"pallet-message-queue/try-runtime",
	"pallet-nfts/try-runtime",
	"pallet-parameters/try-runtime",
	"pallet-proofs-dealer/try-runtime",
	"pallet-randomness/try-runtime",
	"pallet-session/try-runtime",
	"pallet-storage-providers/try-runtime",
	"pallet-sudo/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pallet-xcm/try-runtime",
	"parachain-info/try-runtime",
	"polkadot-runtime-common/try-runtime",
	"shp-constants/try-runtime",
	"shp-file-key-verifier/try-runtime",
	"shp-file-metadata/try-runtime",
	"shp-forest-verifier/try-runtime",
	"shp-traits/try-runtime",
	"shp-treasury-funding/try-runtime",
	"sp-runtime/try-runtime",
]

fast-runtime = []

# Enable the metadata hash generation.
#
# This is hidden behind a feature because it increases the compile time.
# The wasm binary needs to be compiled twice, once to fetch the metadata,
# generate the metadata hash and then a second time with the
# `RUNTIME_METADATA_HASH` environment variable set for the `CheckMetadataHash`
# extension.
metadata-hash = ["substrate-wasm-builder/metadata-hash"]

# A convenience feature for enabling things when doing a build
# for an on-chain release.
on-chain-release-build = ["metadata-hash"]
